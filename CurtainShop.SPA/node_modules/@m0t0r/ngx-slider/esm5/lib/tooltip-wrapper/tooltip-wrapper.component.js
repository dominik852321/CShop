/**
 * @fileoverview added by tsickle
 * Generated from: lib/tooltip-wrapper/tooltip-wrapper.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, TemplateRef } from '@angular/core';
var TooltipWrapperComponent = /** @class */ (function () {
    function TooltipWrapperComponent() {
    }
    TooltipWrapperComponent.decorators = [
        { type: Component, args: [{
                    selector: 'ngx-slider-tooltip-wrapper',
                    template: "<ng-container *ngIf=\"template\">\n  <ng-template *ngTemplateOutlet=\"template; context: {tooltip: tooltip, placement: placement, content: content}\">\n  </ng-template>\n</ng-container>\n\n<ng-container *ngIf=\"!template\">\n  <div class=\"ngx-slider-inner-tooltip\" [attr.title]=\"tooltip\" [attr.data-tooltip-placement]=\"placement\">\n    {{content}}\n  </div>\n</ng-container>\n",
                    styles: [".ngx-slider-inner-tooltip{height:100%}"]
                }] }
    ];
    TooltipWrapperComponent.propDecorators = {
        template: [{ type: Input }],
        tooltip: [{ type: Input }],
        placement: [{ type: Input }],
        content: [{ type: Input }]
    };
    return TooltipWrapperComponent;
}());
export { TooltipWrapperComponent };
if (false) {
    /** @type {?} */
    TooltipWrapperComponent.prototype.template;
    /** @type {?} */
    TooltipWrapperComponent.prototype.tooltip;
    /** @type {?} */
    TooltipWrapperComponent.prototype.placement;
    /** @type {?} */
    TooltipWrapperComponent.prototype.content;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9vbHRpcC13cmFwcGVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BtMHQwci9uZ3gtc2xpZGVyLyIsInNvdXJjZXMiOlsibGliL3Rvb2x0aXAtd3JhcHBlci90b29sdGlwLXdyYXBwZXIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsV0FBVyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRTlEO0lBQUE7SUFpQkEsQ0FBQzs7Z0JBakJBLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsNEJBQTRCO29CQUN0QywwWUFBK0M7O2lCQUVoRDs7OzJCQUVFLEtBQUs7MEJBR0wsS0FBSzs0QkFHTCxLQUFLOzBCQUdMLEtBQUs7O0lBRVIsOEJBQUM7Q0FBQSxBQWpCRCxJQWlCQztTQVpZLHVCQUF1Qjs7O0lBQ2xDLDJDQUMyQjs7SUFFM0IsMENBQ2dCOztJQUVoQiw0Q0FDa0I7O0lBRWxCLDBDQUNnQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIFRlbXBsYXRlUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ25neC1zbGlkZXItdG9vbHRpcC13cmFwcGVyJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3Rvb2x0aXAtd3JhcHBlci5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL3Rvb2x0aXAtd3JhcHBlci5jb21wb25lbnQuc2NzcyddXG59KVxuZXhwb3J0IGNsYXNzIFRvb2x0aXBXcmFwcGVyQ29tcG9uZW50IHtcbiAgQElucHV0KClcbiAgdGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT47XG5cbiAgQElucHV0KClcbiAgdG9vbHRpcDogc3RyaW5nO1xuXG4gIEBJbnB1dCgpXG4gIHBsYWNlbWVudDogc3RyaW5nO1xuXG4gIEBJbnB1dCgpXG4gIGNvbnRlbnQ6IHN0cmluZztcbn1cbiJdfQ==