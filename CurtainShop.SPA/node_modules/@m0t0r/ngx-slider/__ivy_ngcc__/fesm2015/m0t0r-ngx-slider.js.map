{"version":3,"file":"m0t0r-ngx-slider.js","sources":["ng:/@m0t0r/ngx-slider/lib/interfaces/options.ts","ng:/@m0t0r/ngx-slider/lib/interfaces/pointer-type.ts","ng:/@m0t0r/ngx-slider/lib/interfaces/change-context.ts","ng:/@m0t0r/ngx-slider/lib/helpers/value-helper.ts","ng:/@m0t0r/ngx-slider/lib/helpers/compatibility-helper.ts","ng:/@m0t0r/ngx-slider/lib/helpers/math-helper.ts","ng:/@m0t0r/ngx-slider/lib/interfaces/event-listener.ts","ng:/@m0t0r/ngx-slider/lib/helpers/event-listener-helper.ts","ng:/@m0t0r/ngx-slider/lib/directives/slider-element.directive.ts","ng:/@m0t0r/ngx-slider/lib/directives/slider-handle.directive.ts","ng:/@m0t0r/ngx-slider/lib/directives/slider-label.directive.ts","ng:/@m0t0r/ngx-slider/lib/slider/slider.component.ts","ng:/@m0t0r/ngx-slider/lib/tooltip-wrapper/tooltip-wrapper.component.ts","ng:/@m0t0r/ngx-slider/lib/slider/slider.module.ts"],"names":[],"mappings":"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","sourcesContent":["  // tslint:disable: no-inferrable-types\nimport { PointerType } from './pointer-type';\n\n/** Label type */\nexport enum LabelType {\n  /** Label above low pointer */\n  Low,\n  /** Label above high pointer */\n  High,\n  /** Label for minimum slider value */\n  Floor,\n  /** Label for maximum slider value */\n  Ceil,\n  /** Label below legend tick */\n  TickValue\n}\n\n/** Function to translate label value into text */\nexport type TranslateFunction = (value: number, label: LabelType) => string;\n/** Function to combind */\nexport type CombineLabelsFunction = (minLabel: string, maxLabel: string) => string;\n/** Function to provide legend  */\nexport type GetLegendFunction = (value: number) => string;\n\n/** Function converting slider value to slider position */\nexport type ValueToPositionFunction = (val: number, minVal: number, maxVal: number) => number;\n\n/** Function converting slider position to slider value */\nexport type PositionToValueFunction = (percent: number, minVal: number, maxVal: number) => number;\n\n/**\n * Custom step definition\n *\n * This can be used to specify custom values and legend values for slider ticks\n */\nexport interface CustomStepDefinition {\n  /** Value */\n  value: number;\n  /** Legend (label for the value) */\n  legend?: string;\n}\n\n/** Slider options */\nexport class Options {\n  /** Minimum value for a slider.\n   * Not applicable when using stepsArray.\n   */\n  floor?: number = 0;\n\n  /** Maximum value for a slider.\n   * Not applicable when using stepsArray.\n   */\n  ceil?: number = null;\n\n  /** Step between each value.\n   * Not applicable when using stepsArray.\n   */\n  step?: number = 1;\n\n  /** The minimum range authorized on the slider.\n   * Applies to range slider only.\n   * When using stepsArray, expressed as index into stepsArray.\n   */\n  minRange?: number = null;\n\n  /** The maximum range authorized on the slider.\n   * Applies to range slider only.\n   * When using stepsArray, expressed as index into stepsArray.\n   */\n  maxRange?: number = null;\n\n  /** Set to true to have a push behavior. When the min handle goes above the max,\n   * the max is moved as well (and vice-versa). The range between min and max is\n   * defined by the step option (defaults to 1) and can also be overriden by\n   * the minRange option. Applies to range slider only.\n   */\n  pushRange?: boolean = false;\n\n  /** The minimum value authorized on the slider.\n   * When using stepsArray, expressed as index into stepsArray.\n   */\n  minLimit?: number = null;\n\n  /** The maximum value authorized on the slider.\n   * When using stepsArray, expressed as index into stepsArray.\n   */\n  maxLimit?: number = null;\n\n  /** Custom translate function. Use this if you want to translate values displayed\n   * on the slider.\n   */\n  translate?: TranslateFunction = null;\n\n  /** Custom function for combining overlapping labels in range slider.\n   * It takes the min and max values (already translated with translate fuction)\n   * and should return how these two values should be combined.\n   * If not provided, the default function will join the two values with ' - ' as separator.\n   */\n  combineLabels?: CombineLabelsFunction = null;\n\n  /** Use to display legend under ticks (thus, it needs to be used along with\n   * showTicks or showTicksValues). The function will be called with each tick\n   * value and returned content will be displayed under the tick as a legend.\n   * If the returned value is null, then no legend is displayed under\n   * the corresponding tick.You can also directly provide the legend values\n   * in the stepsArray option.\n   */\n  getLegend?: GetLegendFunction = null;\n\n  /** If you want to display a slider with non linear/number steps.\n   * Just pass an array with each slider value and that's it; the floor, ceil and step settings\n   * of the slider will be computed automatically.\n   * By default, the value model and valueHigh model values will be the value of the selected item\n   * in the stepsArray.\n   * They can also be bound to the index of the selected item by setting the bindIndexForStepsArray\n   * option to true.\n   */\n  stepsArray?: CustomStepDefinition[] = null;\n\n  /** Set to true to bind the index of the selected item to value model and valueHigh model. */\n  bindIndexForStepsArray?: boolean = false;\n\n  /** When set to true and using a range slider, the range can be dragged by the selection bar.\n   * Applies to range slider only.\n   */\n  draggableRange?: boolean = false;\n\n  /** Same as draggableRange but the slider range can't be changed.\n   * Applies to range slider only.\n   */\n  draggableRangeOnly?: boolean = false;\n\n  /** Set to true to always show the selection bar before the slider handle. */\n  showSelectionBar?: boolean = false;\n\n  /** Set to true to always show the selection bar after the slider handle. */\n  showSelectionBarEnd?: boolean = false;\n\n  /**  Set a number to draw the selection bar between this value and the slider handle.\n   * When using stepsArray, expressed as index into stepsArray.\n   */\n  showSelectionBarFromValue?: number = null;\n\n  /**  Only for range slider. Set to true to visualize in different colour the areas\n   * on the left/right (top/bottom for vertical range slider) of selection bar between the handles.\n   */\n  showOuterSelectionBars?: boolean = false;\n\n  /** Set to true to hide pointer labels */\n  hidePointerLabels?: boolean = false;\n\n  /** Set to true to hide min / max labels  */\n  hideLimitLabels?: boolean = false;\n\n  /** Set to false to disable the auto-hiding behavior of the limit labels. */\n  autoHideLimitLabels?: boolean = true;\n\n  /** Set to true to make the slider read-only. */\n  readOnly?: boolean = false;\n\n  /** Set to true to disable the slider. */\n  disabled?: boolean = false;\n\n  /** Throttle interval for mouse events in milliseconds.\n   * This is provided to avoid a flood of events when moving the slider with mouse.\n   */\n  mouseEventsInterval?: number = 50;\n\n  /** Throttle interval for touch events in milliseconds.\n   * This is provided to avoid a flood of events when moving the slider with touch gesture.\n   */\n  touchEventsInterval?: number = 50;\n\n  /** Throttle interval for input changes (changes to bindings or reactive form inputs)\n   * This is provided to avoid a flood of events on frequent input binding changes affecting performance.\n   */\n  inputEventsInterval?: number = 100;\n\n  /** Throttle interval for output changes (signalling changes to output bindings and user callbacks)\n   * This is provided to avoid a flood of outgoing events affecting Angular app performance.\n   */\n  outputEventsInterval?: number = 100;\n\n  /** Set to true to display a tick for each step of the slider. */\n  showTicks?: boolean = false;\n\n  /** Set to true to display a tick and the step value for each step of the slider.. */\n  showTicksValues?: boolean = false;\n\n  /* The step between each tick to display. If not set, the step value is used.\n    Not used when ticksArray is specified. */\n  tickStep?: number = null;\n\n  /* The step between displaying each tick step value. */\n  tickValueStep?: number = 1;\n\n  /** Use to display ticks at specific positions.\n   * The array contains the index of the ticks that should be displayed.\n   * For example, [0, 1, 5] will display a tick for the first, second and sixth values.\n   */\n  ticksArray?: number[] = null;\n\n  /** Used to display a tooltip when a tick is hovered.\n   * Set to a function that returns the tooltip content for a given value.\n   */\n  ticksTooltip?: (value: number) => string = null;\n\n  /** Same as ticksTooltip but for ticks values. */\n  ticksValuesTooltip?: (value: number) => string = null;\n\n  /** Set to true to display the slider vertically.\n   * The slider will take the full height of its parent.\n   * Changing this value at runtime is not currently supported.\n   */\n  vertical?: boolean = false;\n\n  /** Function that returns the current color of the selection bar.\n   * If your color won't change, don't use this option but set it through CSS.\n   * If the returned color depends on a model value (either value or valueHigh),\n   * you should use the argument passed to the function.\n   * Indeed, when the function is called, there is no certainty that the model\n   * has already been updated.\n   */\n  getSelectionBarColor?: (minValue: number, maxValue?: number) => string = null;\n\n  /** Function that returns the color of a tick. showTicks must be enabled. */\n  getTickColor?: (value: number) => string = null;\n\n  /** Function that returns the current color of a pointer.\n   * If your color won't change, don't use this option but set it through CSS.\n   * If the returned color depends on a model value (either value or valueHigh),\n   * you should use the argument passed to the function.\n   * Indeed, when the function is called, there is no certainty that the model has already been updated.\n   * To handle range slider pointers independently, you should evaluate pointerType within the given\n   * function where \"min\" stands for value model and \"max\" for valueHigh model values.\n   */\n  getPointerColor?: (value: number, pointerType: PointerType) => string = null;\n\n  /** Handles are focusable (on click or with tab) and can be modified using the following keyboard controls:\n   * Left/bottom arrows: -1\n   * Right/top arrows: +1\n   * Page-down: -10%\n   * Page-up: +10%\n   * Home: minimum value\n   * End: maximum value\n   */\n  keyboardSupport?: boolean = true;\n\n  /** If you display the slider in an element that uses transform: scale(0.5), set the scale value to 2\n   * so that the slider is rendered properly and the events are handled correctly.\n   */\n  scale?: number = 1;\n\n  /** Set to true to force the value to be rounded to the step, even when modified from the outside.\n   * When set to false, if the model values are modified from outside the slider, they are not rounded\n   * and can be between two steps.\n   */\n  enforceStep?: boolean = true;\n\n  /** Set to true to force the value to be normalised to allowed range (floor to ceil), even when modified from the outside.\n   * When set to false, if the model values are modified from outside the slider, and they are outside allowed range,\n   * the slider may be rendered incorrectly. However, setting this to false may be useful if you want to perform custom normalisation.\n   */\n  enforceRange?: boolean = true;\n\n  /** Set to true to prevent to user from switching the min and max handles. Applies to range slider only. */\n  noSwitching?: boolean = false;\n\n  /** Set to true to only bind events on slider handles. */\n  onlyBindHandles?: boolean = false;\n\n  /** Set to true to show graphs right to left.\n   * If vertical is true it will be from top to bottom and left / right arrow functions reversed.\n   */\n  rightToLeft?: boolean = false;\n\n  /** Set to true to reverse keyboard navigation:\n   * Right/top arrows: -1\n   * Left/bottom arrows: +1\n   * Page-up: -10%\n   * Page-down: +10%\n   * End: minimum value\n   * Home: maximum value\n   */\n  reversedControls?: boolean = false;\n\n  /** Set to true to keep the slider labels inside the slider bounds. */\n  boundPointerLabels?: boolean = true;\n\n  /** Set to true to use a logarithmic scale to display the slider.  */\n  logScale?: boolean = false;\n\n  /** Function that returns the position on the slider for a given value.\n   * The position must be a percentage between 0 and 1.\n   * The function should be monotonically increasing or decreasing; otherwise the slider may behave incorrectly.\n   */\n  customValueToPosition?: ValueToPositionFunction = null;\n\n  /** Function that returns the value for a given position on the slider.\n   * The position is a percentage between 0 and 1.\n   * The function should be monotonically increasing or decreasing; otherwise the slider may behave incorrectly.\n   */\n  customPositionToValue?: PositionToValueFunction = null;\n\n  /** Precision limit for calculated values.\n   * Values used in calculations will be rounded to this number of significant digits\n   * to prevent accumulating small floating-point errors.\n   */\n  precisionLimit?: number = 12;\n\n  /** Use to display the selection bar as a gradient.\n   * The given object must contain from and to properties which are colors.\n   */\n  selectionBarGradient?: {from: string, to: string} = null;\n\n  /** Use to add a label directly to the slider for accessibility. Adds the aria-label attribute. */\n  ariaLabel?: string = null;\n\n  /** Use instead of ariaLabel to reference the id of an element which will be used to label the slider.\n   * Adds the aria-labelledby attribute.\n   */\n  ariaLabelledBy?: string = null;\n\n  /** Use to add a label directly to the slider range for accessibility. Adds the aria-label attribute. */\n  ariaLabelHigh?: string = null;\n\n  /** Use instead of ariaLabelHigh to reference the id of an element which will be used to label the slider range.\n   * Adds the aria-labelledby attribute.\n   */\n  ariaLabelledByHigh?: string = null;\n\n  /** Use to increase rendering performance. If the value is not provided, the slider calculates the with/height of the handle */\n  handleDimension?: number = null;\n\n  /** Use to increase rendering performance. If the value is not provided, the slider calculates the with/height of the bar */\n  barDimension?: number = null;\n\n  /** Enable/disable CSS animations */\n  animate?: boolean = true;\n}\n","/** Pointer type */\nexport enum PointerType {\n  /** Low pointer */\n  Min,\n  /** High pointer */\n  Max\n}\n","import { PointerType } from './pointer-type';\n\nexport class ChangeContext {\n  value: number;\n  highValue?: number;\n  pointerType: PointerType;\n}\n","import { CustomStepDefinition } from '../interfaces/options';\n\n/**\n *  Collection of functions to handle conversions/lookups of values\n */\nexport class ValueHelper {\n  static isNullOrUndefined(value: any): boolean {\n    return value === undefined || value === null;\n  }\n\n  static linearValueToPosition(val: number, minVal: number, maxVal: number): number {\n    const range: number = maxVal - minVal;\n    return (val - minVal) / range;\n  }\n\n  static logValueToPosition(val: number, minVal: number, maxVal: number): number {\n    val = Math.log(val);\n    minVal = Math.log(minVal);\n    maxVal = Math.log(maxVal);\n    const range: number = maxVal - minVal;\n    return (val - minVal) / range;\n  }\n\n  static linearPositionToValue(percent: number, minVal: number, maxVal: number): number {\n    return percent * (maxVal - minVal) + minVal;\n  }\n\n  static logPositionToValue(percent: number, minVal: number, maxVal: number): number {\n    minVal = Math.log(minVal);\n    maxVal = Math.log(maxVal);\n    const value: number = percent * (maxVal - minVal) + minVal;\n    return Math.exp(value);\n  }\n\n  static findStepIndex(modelValue: number, stepsArray: CustomStepDefinition[]): number {\n    const differences: number[] = stepsArray.map((step: CustomStepDefinition): number => Math.abs(modelValue - step.value));\n\n    let minDifferenceIndex = 0;\n    for (let index = 0; index < stepsArray.length; index++) {\n      if (differences[index] !== differences[minDifferenceIndex] && differences[index] < differences[minDifferenceIndex]) {\n        minDifferenceIndex = index;\n      }\n    }\n\n    return minDifferenceIndex;\n  }\n}\n","// Declaration for ResizeObserver a new API available in some of newest browsers:\n// https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver\ndeclare class ResizeObserver {\n}\n\n/** Helper with compatibility functions to support different browsers */\nexport class CompatibilityHelper {\n  /** Workaround for TouchEvent constructor sadly not being available on all browsers (e.g. Firefox, Safari) */\n  public static isTouchEvent(event: any): boolean {\n    if ((window as any).TouchEvent !== undefined) {\n      return event instanceof TouchEvent;\n    }\n\n    return event.touches !== undefined;\n  }\n\n  /** Detect presence of ResizeObserver API */\n  public static isResizeObserverAvailable(): boolean {\n    return (window as any).ResizeObserver !== undefined;\n  }\n}\n","/** Helper with mathematical functions */\nexport class MathHelper {\n  /* Round numbers to a given number of significant digits */\n  static roundToPrecisionLimit(value: number, precisionLimit: number): number {\n    return +( value.toPrecision(precisionLimit) );\n  }\n\n  static clampToRange(value: number, floor: number, ceil: number): number {\n    return Math.min(Math.max(value, floor), ceil);\n  }\n}\n","import { Subject, Subscription } from 'rxjs';\n\nexport class EventListener {\n  eventName: string = null;\n  events: Subject<Event> = null;\n  eventsSubscription: Subscription = null;\n  teardownCallback: () => void = null;\n}\n","import { Renderer2 } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { throttleTime, tap } from 'rxjs/operators';\nimport detectPassiveEvents from 'detect-passive-events';\n\nimport { EventListener } from '../interfaces/event-listener';\nimport { ValueHelper } from './value-helper';\n\n/**\n * Helper class to attach event listeners to DOM elements with debounce support using rxjs\n */\nexport class EventListenerHelper {\n  constructor(private renderer: Renderer2) {\n  }\n\n  public attachPassiveEventListener(nativeElement: any, eventName: string, callback: (event: any) => void,\n                                    throttleInterval?: number): EventListener {\n    // Only use passive event listeners if the browser supports it\n    if (detectPassiveEvents.hasSupport !== true) {\n      return this.attachEventListener(nativeElement, eventName, callback, throttleInterval);\n    }\n\n    // Angular doesn't support passive event handlers (yet), so we need to roll our own code using native functions\n    const listener: EventListener = new EventListener();\n    listener.eventName = eventName;\n    listener.events = new Subject<Event>();\n\n    const observerCallback: (event: Event) => void = (event: Event): void => {\n      listener.events.next(event);\n    };\n    nativeElement.addEventListener(eventName, observerCallback, {passive: true, capture: false});\n\n    listener.teardownCallback = (): void => {\n      nativeElement.removeEventListener(eventName, observerCallback, {passive: true, capture: false});\n    };\n\n    listener.eventsSubscription = listener.events\n      .pipe((!ValueHelper.isNullOrUndefined(throttleInterval))\n        ? throttleTime(throttleInterval, undefined, { leading: true, trailing: true})\n        : tap(() => {}) // no-op\n      )\n      .subscribe((event: Event) => {\n        callback(event);\n      });\n\n    return listener;\n  }\n\n  public detachEventListener(eventListener: EventListener): void {\n    if (!ValueHelper.isNullOrUndefined(eventListener.eventsSubscription)) {\n      eventListener.eventsSubscription.unsubscribe();\n      eventListener.eventsSubscription = null;\n    }\n\n    if (!ValueHelper.isNullOrUndefined(eventListener.events)) {\n      eventListener.events.complete();\n      eventListener.events = null;\n    }\n\n    if (!ValueHelper.isNullOrUndefined(eventListener.teardownCallback)) {\n      eventListener.teardownCallback();\n      eventListener.teardownCallback = null;\n    }\n  }\n\n  public attachEventListener(nativeElement: any, eventName: string, callback: (event: any) => void,\n                             throttleInterval?: number): EventListener {\n    const listener: EventListener = new EventListener();\n    listener.eventName = eventName;\n    listener.events = new Subject<Event>();\n\n    const observerCallback: (event: Event) => void = (event: Event): void => {\n      listener.events.next(event);\n    };\n\n    listener.teardownCallback = this.renderer.listen(nativeElement, eventName, observerCallback);\n\n    listener.eventsSubscription = listener.events\n      .pipe((!ValueHelper.isNullOrUndefined(throttleInterval))\n          ? throttleTime(throttleInterval, undefined, { leading: true, trailing: true})\n          : tap(() => {}) // no-op\n      )\n      .subscribe((event: Event) => { callback(event); });\n\n    return listener;\n  }\n}\n","  // tslint:disable: variable-name\nimport { Directive, ElementRef, Renderer2, HostBinding } from '@angular/core';\nimport { EventListenerHelper } from '../helpers/event-listener-helper';\nimport { EventListener } from '../interfaces/event-listener';\nimport { ValueHelper } from '../helpers/value-helper';\n\n@Directive({\n  selector: '[ngxSliderElement]'\n})\nexport class SliderElementDirective {\n  private _position = 0;\n  get position(): number {\n    return this._position;\n  }\n\n  private _dimension = 0;\n  get dimension(): number {\n    return this._dimension;\n  }\n\n  private _alwaysHide = false;\n  get alwaysHide(): boolean {\n    return this._alwaysHide;\n  }\n\n  private _vertical = false;\n  get vertical(): boolean {\n    return this._vertical;\n  }\n\n  private _scale = 1;\n  get scale(): number {\n    return this._scale;\n  }\n\n  @HostBinding('style.opacity')\n  opacity = 1;\n\n  @HostBinding('style.visibility')\n  visibility = 'visible';\n\n  @HostBinding('style.left')\n  left = '';\n\n  @HostBinding('style.bottom')\n  bottom = '';\n\n  @HostBinding('style.height')\n  height = '';\n\n  @HostBinding('style.width')\n  width = '';\n\n  private eventListenerHelper: EventListenerHelper;\n  private eventListeners: EventListener[] = [];\n\n  constructor(protected elemRef: ElementRef, protected renderer: Renderer2) {\n    this.eventListenerHelper = new EventListenerHelper(this.renderer);\n  }\n\n  setAlwaysHide(hide: boolean): void {\n    this._alwaysHide = hide;\n    if (hide) {\n      this.visibility = 'hidden';\n    } else {\n      this.visibility = 'visible';\n    }\n  }\n\n  hide(): void {\n    this.opacity = 0;\n  }\n\n  show(): void {\n    if (this.alwaysHide) {\n      return;\n    }\n\n    this.opacity = 1;\n  }\n\n  isVisible(): boolean {\n    if (this.alwaysHide) {\n      return false;\n    }\n    return this.opacity !== 0;\n  }\n\n  setVertical(vertical: boolean): void {\n    this._vertical = vertical;\n    if (this._vertical) {\n      this.left = '';\n      this.width = '';\n    } else {\n      this.bottom = '';\n      this.height = '';\n    }\n  }\n\n  setScale(scale: number): void {\n    this._scale = scale;\n  }\n\n   // Set element left/top position depending on whether slider is horizontal or vertical\n  setPosition(pos: number): void {\n    this._position = pos;\n    if (this._vertical) {\n      this.bottom = Math.round(pos) + 'px';\n    } else {\n      this.left = Math.round(pos) + 'px';\n    }\n  }\n\n  // Calculate element's width/height depending on whether slider is horizontal or vertical\n  calculateDimension(): void {\n    const val: ClientRect = this.getBoundingClientRect();\n    if (this.vertical) {\n      this._dimension = (val.bottom - val.top) * this.scale;\n    } else {\n      this._dimension = (val.right - val.left) * this.scale;\n    }\n  }\n\n  // Set element width/height depending on whether slider is horizontal or vertical\n  setDimension(dim: number): void {\n    this._dimension = dim;\n    if (this._vertical) {\n      this.height = Math.round(dim) + 'px';\n    } else {\n      this.width = Math.round(dim) + 'px';\n    }\n  }\n\n  getBoundingClientRect(): ClientRect {\n    return this.elemRef.nativeElement.getBoundingClientRect();\n  }\n\n  on(eventName: string, callback: (event: any) => void, debounceInterval?: number): void {\n    const listener: EventListener = this.eventListenerHelper.attachEventListener(\n      this.elemRef.nativeElement, eventName, callback, debounceInterval);\n    this.eventListeners.push(listener);\n  }\n\n  onPassive(eventName: string, callback: (event: any) => void, debounceInterval?: number): void {\n    const listener: EventListener = this.eventListenerHelper.attachPassiveEventListener(\n      this.elemRef.nativeElement, eventName, callback, debounceInterval);\n    this.eventListeners.push(listener);\n  }\n\n  off(eventName?: string): void {\n    let listenersToKeep: EventListener[];\n    let listenersToRemove: EventListener[];\n    if (!ValueHelper.isNullOrUndefined(eventName)) {\n      listenersToKeep = this.eventListeners.filter((event: EventListener) => event.eventName !== eventName);\n      listenersToRemove = this.eventListeners.filter((event: EventListener) => event.eventName === eventName);\n    } else {\n      listenersToKeep = [];\n      listenersToRemove = this.eventListeners;\n    }\n\n    for (const listener of listenersToRemove) {\n      this.eventListenerHelper.detachEventListener(listener);\n    }\n\n    this.eventListeners = listenersToKeep;\n  }\n}\n","import { Directive, ElementRef, Renderer2, HostBinding } from '@angular/core';\nimport { SliderElementDirective } from './slider-element.directive';\n\n@Directive({\n  selector: '[ngxSliderHandle]'\n})\nexport class SliderHandleDirective extends SliderElementDirective {\n  @HostBinding('class.ngx-slider-active')\n  active = false;\n\n  @HostBinding('attr.role')\n  role = '';\n\n  @HostBinding('attr.tabindex')\n  tabindex = '';\n\n  @HostBinding('attr.aria-orientation')\n  ariaOrientation = '';\n\n  @HostBinding('attr.aria-label')\n  ariaLabel = '';\n\n  @HostBinding('attr.aria-labelledby')\n  ariaLabelledBy = '';\n\n  @HostBinding('attr.aria-valuenow')\n  ariaValueNow = '';\n\n  @HostBinding('attr.aria-valuetext')\n  ariaValueText = '';\n\n  @HostBinding('attr.aria-valuemin')\n  ariaValueMin = '';\n\n  @HostBinding('attr.aria-valuemax')\n  ariaValueMax = '';\n\n  focus(): void {\n    this.elemRef.nativeElement.focus();\n  }\n\n  constructor(elemRef: ElementRef, renderer: Renderer2) {\n    super(elemRef, renderer);\n  }\n}\n","import { Directive, ElementRef, Renderer2 } from '@angular/core';\nimport { SliderElementDirective } from './slider-element.directive';\nimport { ValueHelper } from '../helpers/value-helper';\n\n@Directive({\n  selector: '[ngxSliderLabel]'\n})\nexport class SliderLabelDirective extends SliderElementDirective {\n  // tslint:disable-next-line: variable-name\n  private _value: string = null;\n  get value(): string {\n    return this._value;\n  }\n\n  constructor(elemRef: ElementRef, renderer: Renderer2) {\n    super(elemRef, renderer);\n  }\n\n  setValue(value: string): void {\n    let recalculateDimension = false;\n\n    if (!this.alwaysHide &&\n        (ValueHelper.isNullOrUndefined(this.value) ||\n         this.value.length !== value.length ||\n         (this.value.length > 0 && this.dimension === 0))) {\n      recalculateDimension = true;\n    }\n\n    this._value = value;\n    this.elemRef.nativeElement.innerHTML = value;\n\n    // Update dimension only when length of the label have changed\n    if (recalculateDimension) {\n      this.calculateDimension();\n    }\n  }\n}\n","import {\n  Component,\n  OnInit,\n  ViewChild,\n  AfterViewInit,\n  OnChanges,\n  OnDestroy,\n  HostBinding,\n  HostListener,\n  Input,\n  ElementRef,\n  Renderer2,\n  EventEmitter,\n  Output,\n  ContentChild,\n  TemplateRef,\n  ChangeDetectorRef,\n  SimpleChanges,\n  forwardRef,\n  NgZone\n} from '@angular/core';\n\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { Subject, Subscription } from 'rxjs';\nimport { distinctUntilChanged, filter, throttleTime, tap } from 'rxjs/operators';\n\nimport detectPassiveEvents from 'detect-passive-events';\n\nimport {\n  Options,\n  LabelType,\n  ValueToPositionFunction,\n  PositionToValueFunction,\n  CustomStepDefinition\n} from '../interfaces/options';\nimport { PointerType } from '../interfaces/pointer-type';\nimport { ChangeContext } from '../interfaces/change-context';\nimport { ValueHelper } from '../helpers/value-helper';\nimport { CompatibilityHelper } from '../helpers/compatibility-helper';\nimport { MathHelper } from '../helpers/math-helper';\nimport { EventListener } from '../interfaces/event-listener';\nimport { EventListenerHelper } from '../helpers/event-listener-helper';\nimport { SliderElementDirective } from '../directives/slider-element.directive';\nimport { SliderHandleDirective } from '../directives/slider-handle.directive';\nimport { SliderLabelDirective } from '../directives/slider-label.directive';\n\n// Declaration for ResizeObserver a new API available in some of newest browsers:\n// https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver\ndeclare class ResizeObserver {\n  constructor(callback: () => void);\n  observe(target: any): void;\n  unobserve(target: any): void;\n  disconnect(): void;\n}\n\nexport class Tick {\n  selected = false;\n  style: any = {};\n  tooltip: string = null;\n  tooltipPlacement: string = null;\n  value: string = null;\n  valueTooltip: string = null;\n  valueTooltipPlacement: string = null;\n  legend: string = null;\n}\n\nclass Dragging {\n  active = false;\n  value = 0;\n  difference = 0;\n  position = 0;\n  lowLimit = 0;\n  highLimit = 0;\n}\n\nclass ModelValues {\n  value: number;\n  highValue: number;\n\n  public static compare(x?: ModelValues, y?: ModelValues): boolean {\n    if (ValueHelper.isNullOrUndefined(x) && ValueHelper.isNullOrUndefined(y)) {\n      return false;\n    }\n    if (ValueHelper.isNullOrUndefined(x) !== ValueHelper.isNullOrUndefined(y)) {\n      return false;\n    }\n    return x.value === y.value && x.highValue === y.highValue;\n  }\n}\n\nclass ModelChange extends ModelValues {\n  // Flag used to by-pass distinctUntilChanged() filter on input values\n  // (sometimes there is a need to pass values through even though the model values have not changed)\n  forceChange: boolean;\n\n  public static compare(x?: ModelChange, y?: ModelChange): boolean {\n    if (ValueHelper.isNullOrUndefined(x) && ValueHelper.isNullOrUndefined(y)) {\n      return false;\n    }\n    if (ValueHelper.isNullOrUndefined(x) !== ValueHelper.isNullOrUndefined(y)) {\n      return false;\n    }\n    return x.value === y.value &&\n           x.highValue === y.highValue &&\n           x.forceChange === y.forceChange;\n  }\n}\n\nclass InputModelChange extends ModelChange {\n  internalChange: boolean;\n}\n\nclass OutputModelChange extends ModelChange {\n  userEventInitiated: boolean;\n}\n\nconst NGX_SLIDER_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  /* tslint:disable-next-line: no-use-before-declare */\n  useExisting: forwardRef(() => SliderComponent),\n  multi: true,\n};\n\n\n@Component({\n  selector: 'ngx-slider',\n  templateUrl: './slider.component.html',\n  styleUrls: ['./slider.component.scss'],\n  // tslint:disable-next-line: no-host-metadata-property\n  host: { class: 'ngx-slider' },\n  providers: [NGX_SLIDER_CONTROL_VALUE_ACCESSOR]\n})\nexport class SliderComponent implements OnInit, AfterViewInit, OnChanges, OnDestroy, ControlValueAccessor {\n  // Model for low value of slider. For simple slider, this is the only input. For range slider, this is the low value.\n  @Input()\n  public value: number = null;\n  // Output for low value slider to support two-way bindings\n  @Output()\n  public valueChange: EventEmitter<number> = new EventEmitter();\n\n  // Model for high value of slider. Not used in simple slider. For range slider, this is the high value.\n  @Input()\n  public highValue: number = null;\n  // Output for high value slider to support two-way bindings\n  @Output()\n  public highValueChange: EventEmitter<number> = new EventEmitter();\n\n  // An object with all the other options of the slider.\n  // Each option can be updated at runtime and the slider will automatically be re-rendered.\n  @Input()\n  public options: Options = new Options();\n\n  // Event emitted when user starts interaction with the slider\n  @Output()\n  public userChangeStart: EventEmitter<ChangeContext> = new EventEmitter();\n\n  // Event emitted on each change coming from user interaction\n  @Output()\n  public userChange: EventEmitter<ChangeContext> = new EventEmitter();\n\n  // Event emitted when user finishes interaction with the slider\n  @Output()\n  public userChangeEnd: EventEmitter<ChangeContext> = new EventEmitter();\n\n  private manualRefreshSubscription: any;\n  // Input event that triggers slider refresh (re-positioning of slider elements)\n  @Input() set manualRefresh(manualRefresh: EventEmitter<void>) {\n    this.unsubscribeManualRefresh();\n\n    this.manualRefreshSubscription = manualRefresh.subscribe(() => {\n      setTimeout(() => this.calculateViewDimensionsAndDetectChanges());\n    });\n  }\n\n  private triggerFocusSubscription: any;\n  // Input event that triggers setting focus on given slider handle\n  @Input() set triggerFocus(triggerFocus: EventEmitter<void>) {\n    this.unsubscribeTriggerFocus();\n\n    this.triggerFocusSubscription = triggerFocus.subscribe((pointerType: PointerType) => {\n      this.focusPointer(pointerType);\n    });\n  }\n\n  // Slider type, true means range slider\n  public get range(): boolean {\n    return !ValueHelper.isNullOrUndefined(this.value) && !ValueHelper.isNullOrUndefined(this.highValue);\n  }\n\n  // Set to true if init method already executed\n  private initHasRun = false;\n\n  // Changes in model inputs are passed through this subject\n  // These are all changes coming in from outside the component through input bindings or reactive form inputs\n  private inputModelChangeSubject: Subject<InputModelChange> = new Subject<InputModelChange>();\n  private inputModelChangeSubscription: Subscription = null;\n\n  // Changes to model outputs are passed through this subject\n  // These are all changes that need to be communicated to output emitters and registered callbacks\n  private outputModelChangeSubject: Subject<OutputModelChange> = new Subject<OutputModelChange>();\n  private outputModelChangeSubscription: Subscription = null;\n\n  // Low value synced to model low value\n  private viewLowValue: number = null;\n  // High value synced to model high value\n  private viewHighValue: number = null;\n  // Options synced to model options, based on defaults\n  private viewOptions: Options = new Options();\n\n  // Half of the width or height of the slider handles\n  private handleHalfDimension = 0;\n  // Maximum position the slider handle can have\n  private maxHandlePosition = 0;\n\n  // Which handle is currently tracked for move events\n  private currentTrackingPointer: PointerType = null;\n  // Internal variable to keep track of the focus element\n  private currentFocusPointer: PointerType = null;\n  // Used to call onStart on the first keydown event\n  private firstKeyDown = false;\n  // Current touch id of touch event being handled\n  private touchId: number = null;\n  // Values recorded when first dragging the bar\n  private dragging: Dragging = new Dragging();\n\n  /* Slider DOM elements */\n\n  // Left selection bar outside two handles\n  @ViewChild('leftOuterSelectionBar', {read: SliderElementDirective, static: false})\n  private leftOuterSelectionBarElement: SliderElementDirective;\n\n  // Right selection bar outside two handles\n  @ViewChild('rightOuterSelectionBar', {read: SliderElementDirective, static: false})\n  private rightOuterSelectionBarElement: SliderElementDirective;\n\n  // The whole slider bar\n  @ViewChild('fullBar', {read: SliderElementDirective, static: false})\n  private fullBarElement: SliderElementDirective;\n\n  // Highlight between two handles\n  @ViewChild('selectionBar', {read: SliderElementDirective, static: false})\n  private selectionBarElement: SliderElementDirective;\n\n  // Left slider handle\n  @ViewChild('minHandle', {read: SliderHandleDirective, static: false})\n  private minHandleElement: SliderHandleDirective;\n\n  // Right slider handle\n  @ViewChild('maxHandle', {read: SliderHandleDirective, static: false})\n  private maxHandleElement: SliderHandleDirective;\n\n  // Floor label\n  @ViewChild('floorLabel', {read: SliderLabelDirective, static: false})\n  private floorLabelElement: SliderLabelDirective;\n\n  // Ceiling label\n  @ViewChild('ceilLabel', {read: SliderLabelDirective, static: false})\n  private ceilLabelElement: SliderLabelDirective;\n\n  // Label above the low value\n  @ViewChild('minHandleLabel', {read: SliderLabelDirective, static: false})\n  private minHandleLabelElement: SliderLabelDirective;\n\n  // Label above the high value\n  @ViewChild('maxHandleLabel', {read: SliderLabelDirective, static: false})\n  private maxHandleLabelElement: SliderLabelDirective;\n\n  // Combined label\n  @ViewChild('combinedLabel', {read: SliderLabelDirective, static: false})\n  private combinedLabelElement: SliderLabelDirective;\n\n  // The ticks\n  @ViewChild('ticksElement', {read: SliderElementDirective, static: false})\n  private ticksElement: SliderElementDirective;\n\n  // Optional custom template for displaying tooltips\n  @ContentChild('tooltipTemplate', {static: false})\n  public tooltipTemplate: TemplateRef<any>;\n\n  // Host element class bindings\n  @HostBinding('class.vertical')\n  public sliderElementVerticalClass = false;\n  @HostBinding('class.animate')\n  public sliderElementAnimateClass = false;\n  @HostBinding('attr.disabled')\n  public sliderElementDisabledAttr: string = null;\n\n  // CSS styles and class flags\n  public barStyle: any = {};\n  public minPointerStyle: any = {};\n  public maxPointerStyle: any = {};\n  public fullBarTransparentClass = false;\n  public selectionBarDraggableClass = false;\n  public ticksUnderValuesClass = false;\n\n  // Whether to show/hide ticks\n  public get showTicks(): boolean {\n    return this.viewOptions.showTicks;\n  }\n\n  /* If tickStep is set or ticksArray is specified.\n     In this case, ticks values should be displayed below the slider. */\n  private intermediateTicks = false;\n  // Ticks array as displayed in view\n  public ticks: Tick[] = [];\n\n  // Event listeners\n  private eventListenerHelper: EventListenerHelper = null;\n  private onMoveEventListener: EventListener = null;\n  private onEndEventListener: EventListener = null;\n\n  // Observer for slider element resize events\n  private resizeObserver: ResizeObserver = null;\n\n  // Callbacks for reactive forms support\n  private onTouchedCallback: (value: any) => void = null;\n  private onChangeCallback: (value: any) => void = null;\n\n\n  public constructor(private renderer: Renderer2,\n                     private elementRef: ElementRef,\n                     private changeDetectionRef: ChangeDetectorRef,\n                     private zone: NgZone) {\n    this.eventListenerHelper = new EventListenerHelper(this.renderer);\n  }\n\n  // OnInit interface\n  public ngOnInit(): void {\n    this.viewOptions = new Options();\n    Object.assign(this.viewOptions, this.options);\n\n    // We need to run these two things first, before the rest of the init in ngAfterViewInit(),\n    // because these two settings are set through @HostBinding and Angular change detection\n    // mechanism doesn't like them changing in ngAfterViewInit()\n    this.updateDisabledState();\n    this.updateVerticalState();\n  }\n\n  // AfterViewInit interface\n  public ngAfterViewInit(): void {\n    this.applyOptions();\n\n    this.subscribeInputModelChangeSubject(this.viewOptions.inputEventsInterval);\n    this.subscribeOutputModelChangeSubject(this.viewOptions.outputEventsInterval);\n\n    // Once we apply options, we need to normalise model values for the first time\n    this.renormaliseModelValues();\n\n    this.viewLowValue = this.modelValueToViewValue(this.value);\n    if (this.range) {\n      this.viewHighValue = this.modelValueToViewValue(this.highValue);\n    } else {\n      this.viewHighValue = null;\n    }\n\n    this.updateVerticalState(); // need to run this again to cover changes to slider elements\n    this.manageElementsStyle();\n    this.updateDisabledState();\n    this.calculateViewDimensions();\n    this.addAccessibility();\n    this.updateCeilLabel();\n    this.updateFloorLabel();\n    this.initHandles();\n    this.manageEventsBindings();\n\n    this.subscribeResizeObserver();\n\n    this.initHasRun = true;\n\n    // Run change detection manually to resolve some issues when init procedure changes values used in the view\n    this.changeDetectionRef.detectChanges();\n  }\n\n  // OnChanges interface\n  public ngOnChanges(changes: SimpleChanges): void {\n    // Always apply options first\n    if (!ValueHelper.isNullOrUndefined(changes.options)) {\n      this.onChangeOptions();\n    }\n\n    // Then value changes\n    if (!ValueHelper.isNullOrUndefined(changes.value) ||\n        !ValueHelper.isNullOrUndefined(changes.highValue)) {\n      this.inputModelChangeSubject.next({\n        value: this.value,\n        highValue: this.highValue,\n        forceChange: false,\n        internalChange: false\n      });\n    }\n  }\n\n  // OnDestroy interface\n  public ngOnDestroy(): void {\n    this.unbindEvents();\n\n    this.unsubscribeResizeObserver();\n    this.unsubscribeInputModelChangeSubject();\n    this.unsubscribeOutputModelChangeSubject();\n    this.unsubscribeManualRefresh();\n    this.unsubscribeTriggerFocus();\n  }\n\n  // ControlValueAccessor interface\n  public writeValue(obj: any): void {\n    if (obj instanceof Array) {\n      this.value = obj[0];\n      this.highValue = obj[1];\n    } else {\n      this.value = obj;\n    }\n\n    // ngOnChanges() is not called in this instance, so we need to communicate the change manually\n    this.inputModelChangeSubject.next({\n      value: this.value,\n      highValue: this.highValue,\n      forceChange: false,\n      internalChange: false\n    });\n  }\n\n  // ControlValueAccessor interface\n  public registerOnChange(onChangeCallback: any): void {\n    this.onChangeCallback = onChangeCallback;\n  }\n\n  // ControlValueAccessor interface\n  public registerOnTouched(onTouchedCallback: any): void {\n    this.onTouchedCallback = onTouchedCallback;\n  }\n\n  // ControlValueAccessor interface\n  public setDisabledState(isDisabled: boolean): void {\n    this.viewOptions.disabled = isDisabled;\n    this.updateDisabledState();\n  }\n\n  @HostListener('window:resize', ['$event'])\n  public onResize(event: any): void {\n    this.calculateViewDimensionsAndDetectChanges();\n  }\n\n  private subscribeInputModelChangeSubject(interval?: number): void {\n    this.inputModelChangeSubscription = this.inputModelChangeSubject\n    .pipe(\n      distinctUntilChanged(ModelChange.compare),\n      // Hack to reset the status of the distinctUntilChanged() - if a \"fake\" event comes through with forceChange=true,\n      // we forcefully by-pass distinctUntilChanged(), but otherwise drop the event\n      filter((modelChange: InputModelChange) => !modelChange.forceChange && !modelChange.internalChange),\n      (!ValueHelper.isNullOrUndefined(interval))\n          ? throttleTime(interval, undefined, { leading: true, trailing: true})\n          : tap(() => {}) // no-op\n    )\n    .subscribe((modelChange: InputModelChange) => this.applyInputModelChange(modelChange));\n  }\n\n  private subscribeOutputModelChangeSubject(interval?: number): void {\n    this.outputModelChangeSubscription = this.outputModelChangeSubject\n      .pipe(\n        distinctUntilChanged(ModelChange.compare),\n        (!ValueHelper.isNullOrUndefined(interval))\n          ? throttleTime(interval, undefined, { leading: true, trailing: true})\n          : tap(() => {}) // no-op\n      )\n      .subscribe((modelChange: OutputModelChange) => this.publishOutputModelChange(modelChange));\n  }\n\n  private subscribeResizeObserver(): void {\n    if (CompatibilityHelper.isResizeObserverAvailable()) {\n      this.resizeObserver = new ResizeObserver((): void => this.calculateViewDimensionsAndDetectChanges());\n      this.resizeObserver.observe(this.elementRef.nativeElement);\n    }\n  }\n\n  private unsubscribeResizeObserver(): void {\n    if (CompatibilityHelper.isResizeObserverAvailable() && this.resizeObserver !== null) {\n      this.resizeObserver.disconnect();\n      this.resizeObserver = null;\n    }\n  }\n\n  private unsubscribeOnMove(): void {\n    if (!ValueHelper.isNullOrUndefined(this.onMoveEventListener)) {\n      this.eventListenerHelper.detachEventListener(this.onMoveEventListener);\n      this.onMoveEventListener = null;\n    }\n  }\n\n  private unsubscribeOnEnd(): void {\n    if (!ValueHelper.isNullOrUndefined(this.onEndEventListener)) {\n      this.eventListenerHelper.detachEventListener(this.onEndEventListener);\n      this.onEndEventListener = null;\n    }\n  }\n\n  private unsubscribeInputModelChangeSubject(): void {\n    if (!ValueHelper.isNullOrUndefined(this.inputModelChangeSubscription)) {\n      this.inputModelChangeSubscription.unsubscribe();\n      this.inputModelChangeSubscription = null;\n    }\n  }\n\n  private unsubscribeOutputModelChangeSubject(): void {\n    if (!ValueHelper.isNullOrUndefined(this.outputModelChangeSubscription)) {\n      this.outputModelChangeSubscription.unsubscribe();\n      this.outputModelChangeSubscription = null;\n    }\n  }\n\n  private unsubscribeManualRefresh(): void {\n    if (!ValueHelper.isNullOrUndefined(this.manualRefreshSubscription)) {\n      this.manualRefreshSubscription.unsubscribe();\n      this.manualRefreshSubscription = null;\n    }\n  }\n\n  private unsubscribeTriggerFocus(): void {\n    if (!ValueHelper.isNullOrUndefined(this.triggerFocusSubscription)) {\n      this.triggerFocusSubscription.unsubscribe();\n      this.triggerFocusSubscription = null;\n    }\n  }\n\n  private getPointerElement(pointerType: PointerType): SliderHandleDirective {\n    if (pointerType === PointerType.Min) {\n      return this.minHandleElement;\n    } else if (pointerType === PointerType.Max) {\n      return this.maxHandleElement;\n    }\n    return null;\n  }\n\n  private getCurrentTrackingValue(): number {\n    if (this.currentTrackingPointer === PointerType.Min) {\n      return this.viewLowValue;\n    } else if (this.currentTrackingPointer === PointerType.Max) {\n      return this.viewHighValue;\n    }\n    return null;\n  }\n\n  private modelValueToViewValue(modelValue: number): number {\n    if (ValueHelper.isNullOrUndefined(modelValue)) {\n      return NaN;\n    }\n\n    if (!ValueHelper.isNullOrUndefined(this.viewOptions.stepsArray) && !this.viewOptions.bindIndexForStepsArray) {\n      return ValueHelper.findStepIndex(+modelValue, this.viewOptions.stepsArray);\n    }\n    return +modelValue;\n  }\n\n  private viewValueToModelValue(viewValue: number): number {\n    if (!ValueHelper.isNullOrUndefined(this.viewOptions.stepsArray) && !this.viewOptions.bindIndexForStepsArray) {\n      return this.getStepValue(viewValue);\n    }\n    return viewValue;\n  }\n\n  private getStepValue(sliderValue: number): number {\n    const step: CustomStepDefinition = this.viewOptions.stepsArray[sliderValue];\n    return (!ValueHelper.isNullOrUndefined(step)) ? step.value : NaN;\n  }\n\n  private applyViewChange(): void {\n    this.value = this.viewValueToModelValue(this.viewLowValue);\n    if (this.range) {\n      this.highValue = this.viewValueToModelValue(this.viewHighValue);\n    }\n\n    this.outputModelChangeSubject.next({\n      value: this.value,\n      highValue: this.highValue,\n      userEventInitiated: true,\n      forceChange: false\n    });\n\n    // At this point all changes are applied and outputs are emitted, so we should be done.\n    // However, input changes are communicated in different stream and we need to be ready to\n    // act on the next input change even if it is exactly the same as last input change.\n    // Therefore, we send a special event to reset the stream.\n    this.inputModelChangeSubject.next({\n      value: this.value,\n      highValue: this.highValue,\n      forceChange: false,\n      internalChange: true\n    });\n  }\n\n  // Apply model change to the slider view\n  private applyInputModelChange(modelChange: InputModelChange): void {\n    const normalisedModelChange: ModelValues = this.normaliseModelValues(modelChange);\n\n    // If normalised model change is different, apply the change to the model values\n    const normalisationChange: boolean = !ModelValues.compare(modelChange, normalisedModelChange);\n    if (normalisationChange) {\n      this.value = normalisedModelChange.value;\n      this.highValue = normalisedModelChange.highValue;\n    }\n\n    this.viewLowValue = this.modelValueToViewValue(normalisedModelChange.value);\n    if (this.range) {\n      this.viewHighValue = this.modelValueToViewValue(normalisedModelChange.highValue);\n    } else {\n      this.viewHighValue = null;\n    }\n\n    this.updateLowHandle(this.valueToPosition(this.viewLowValue));\n    if (this.range) {\n      this.updateHighHandle(this.valueToPosition(this.viewHighValue));\n    }\n    this.updateSelectionBar();\n    this.updateTicksScale();\n    this.updateAriaAttributes();\n    if (this.range) {\n      this.updateCombinedLabel();\n    }\n\n    // At the end, we need to communicate the model change to the outputs as well\n    // Normalisation changes are also always forced out to ensure that subscribers always end up in correct state\n    this.outputModelChangeSubject.next({\n      value: normalisedModelChange.value,\n      highValue: normalisedModelChange.highValue,\n      forceChange: normalisationChange,\n      userEventInitiated: false\n    });\n  }\n\n  // Publish model change to output event emitters and registered callbacks\n  private publishOutputModelChange(modelChange: OutputModelChange): void {\n    const emitOutputs: () => void = (): void => {\n      this.valueChange.emit(modelChange.value);\n      if (this.range) {\n        this.highValueChange.emit(modelChange.highValue);\n      }\n\n      if (!ValueHelper.isNullOrUndefined(this.onChangeCallback)) {\n        if (this.range) {\n          this.onChangeCallback([modelChange.value, modelChange.highValue]);\n        } else {\n          this.onChangeCallback(modelChange.value);\n        }\n      }\n      if (!ValueHelper.isNullOrUndefined(this.onTouchedCallback)) {\n        if (this.range) {\n          this.onTouchedCallback([modelChange.value, modelChange.highValue]);\n        } else {\n          this.onTouchedCallback(modelChange.value);\n        }\n      }\n    };\n\n    if (modelChange.userEventInitiated) {\n      // If this change was initiated by a user event, we can emit outputs in the same tick\n      emitOutputs();\n      this.userChange.emit(this.getChangeContext());\n    } else {\n      // But, if the change was initated by something else like a change in input bindings,\n      // we need to wait until next tick to emit the outputs to keep Angular change detection happy\n      setTimeout(() => { emitOutputs(); });\n    }\n  }\n\n  private normaliseModelValues(input: ModelValues): ModelValues {\n    const normalisedInput: ModelValues = new ModelValues();\n    normalisedInput.value = input.value;\n    normalisedInput.highValue = input.highValue;\n\n    if (this.viewOptions.enforceStep) {\n      normalisedInput.value = this.roundStep(normalisedInput.value);\n      if (this.range) {\n        normalisedInput.highValue = this.roundStep(normalisedInput.highValue);\n      }\n    }\n\n    // Don't attempt to normalise further when using steps array (steps may be out of order and that is perfectly fine)\n    if (!ValueHelper.isNullOrUndefined(this.viewOptions.stepsArray) || !this.viewOptions.enforceRange) {\n      return normalisedInput;\n    }\n\n    normalisedInput.value = MathHelper.clampToRange(normalisedInput.value, this.viewOptions.floor, this.viewOptions.ceil);\n\n    if (this.range) {\n      normalisedInput.highValue = MathHelper.clampToRange(normalisedInput.highValue, this.viewOptions.floor, this.viewOptions.ceil);\n    }\n\n    // Make sure that range slider invariant (value <= highValue) is always satisfied\n    if (this.range && input.value > input.highValue) {\n      // We know that both values are now clamped correctly, they may just be in the wrong order\n      // So the easy solution is to swap them... except swapping is sometimes disabled in options, so we make the two values the same\n      if (this.viewOptions.noSwitching) {\n        normalisedInput.value = normalisedInput.highValue;\n      } else {\n        const tempValue: number = input.value;\n        normalisedInput.value = input.highValue;\n        normalisedInput.highValue = tempValue;\n      }\n    }\n\n    return normalisedInput;\n  }\n\n  private renormaliseModelValues(): void {\n    const previousModelValues: ModelValues = {\n      value: this.value,\n      highValue: this.highValue\n    };\n    const normalisedModelValues: ModelValues = this.normaliseModelValues(previousModelValues);\n    if (!ModelValues.compare(normalisedModelValues, previousModelValues)) {\n      this.value = normalisedModelValues.value;\n      this.highValue = normalisedModelValues.highValue;\n\n      this.outputModelChangeSubject.next({\n        value: this.value,\n        highValue: this.highValue,\n        forceChange: true,\n        userEventInitiated: false\n      });\n    }\n  }\n\n  private onChangeOptions(): void {\n    if (!this.initHasRun) {\n      return;\n    }\n\n    const previousInputEventsInterval: number = this.viewOptions.inputEventsInterval;\n    const previousOutputEventsInterval: number = this.viewOptions.outputEventsInterval;\n\n    this.applyOptions();\n\n    if (previousInputEventsInterval !== this.viewOptions.inputEventsInterval) {\n      this.unsubscribeInputModelChangeSubject();\n      this.subscribeInputModelChangeSubject(this.viewOptions.inputEventsInterval);\n    }\n\n    if (previousOutputEventsInterval !== this.viewOptions.outputEventsInterval) {\n      this.unsubscribeInputModelChangeSubject();\n      this.subscribeInputModelChangeSubject(this.viewOptions.outputEventsInterval);\n    }\n\n    // With new options, we need to re-normalise model values if necessary\n    this.renormaliseModelValues();\n\n    this.viewLowValue = this.modelValueToViewValue(this.value);\n    if (this.range) {\n      this.viewHighValue = this.modelValueToViewValue(this.highValue);\n    } else {\n      this.viewHighValue = null;\n    }\n\n    this.resetSlider();\n  }\n\n  // Read the user options and apply them to the slider model\n  private applyOptions(): void {\n    this.viewOptions = new Options();\n    Object.assign(this.viewOptions, this.options);\n\n    this.viewOptions.draggableRange = this.range && this.viewOptions.draggableRange;\n    this.viewOptions.draggableRangeOnly = this.range && this.viewOptions.draggableRangeOnly;\n    if (this.viewOptions.draggableRangeOnly) {\n      this.viewOptions.draggableRange = true;\n    }\n\n    this.viewOptions.showTicks = this.viewOptions.showTicks ||\n      this.viewOptions.showTicksValues ||\n      !ValueHelper.isNullOrUndefined(this.viewOptions.ticksArray);\n    if (this.viewOptions.showTicks &&\n       (!ValueHelper.isNullOrUndefined(this.viewOptions.tickStep) || !ValueHelper.isNullOrUndefined(this.viewOptions.ticksArray))) {\n      this.intermediateTicks = true;\n    }\n\n    this.viewOptions.showSelectionBar = this.viewOptions.showSelectionBar ||\n      this.viewOptions.showSelectionBarEnd ||\n      !ValueHelper.isNullOrUndefined(this.viewOptions.showSelectionBarFromValue);\n\n    if (!ValueHelper.isNullOrUndefined(this.viewOptions.stepsArray)) {\n      this.applyStepsArrayOptions();\n    } else {\n      this.applyFloorCeilOptions();\n    }\n\n    if (ValueHelper.isNullOrUndefined(this.viewOptions.combineLabels)) {\n      this.viewOptions.combineLabels = (minValue: string, maxValue: string): string => {\n        return minValue + ' - ' + maxValue;\n      };\n    }\n\n    if (this.viewOptions.logScale && this.viewOptions.floor === 0) {\n      throw Error('Can\\'t use floor=0 with logarithmic scale');\n    }\n  }\n\n  private applyStepsArrayOptions(): void {\n    this.viewOptions.floor = 0;\n    this.viewOptions.ceil = this.viewOptions.stepsArray.length - 1;\n    this.viewOptions.step = 1;\n\n    if (ValueHelper.isNullOrUndefined(this.viewOptions.translate)) {\n      this.viewOptions.translate = (modelValue: number): string => {\n        if (this.viewOptions.bindIndexForStepsArray) {\n          return String(this.getStepValue(modelValue));\n        }\n        return String(modelValue);\n      };\n    }\n\n    this.viewOptions.getLegend = (index: number): string => {\n      const step: CustomStepDefinition = this.viewOptions.stepsArray[index];\n      return step.legend;\n    };\n  }\n\n  private applyFloorCeilOptions(): void {\n    if (ValueHelper.isNullOrUndefined(this.viewOptions.step)) {\n      this.viewOptions.step = 1;\n    } else {\n      this.viewOptions.step = +this.viewOptions.step;\n      if (this.viewOptions.step <= 0) {\n        this.viewOptions.step = 1;\n     }\n    }\n\n    if (ValueHelper.isNullOrUndefined(this.viewOptions.ceil) ||\n        ValueHelper.isNullOrUndefined(this.viewOptions.floor)) {\n      throw Error('floor and ceil options must be supplied');\n    }\n    this.viewOptions.ceil = +this.viewOptions.ceil;\n    this.viewOptions.floor = +this.viewOptions.floor;\n\n    if (ValueHelper.isNullOrUndefined(this.viewOptions.translate)) {\n      this.viewOptions.translate = (value: number): string => String(value);\n    }\n  }\n\n  // Resets slider\n  private resetSlider(): void {\n    this.manageElementsStyle();\n    this.addAccessibility();\n    this.updateCeilLabel();\n    this.updateFloorLabel();\n    this.unbindEvents();\n    this.manageEventsBindings();\n    this.updateDisabledState();\n    this.calculateViewDimensions();\n    this.refocusPointerIfNeeded();\n  }\n\n  // Sets focus on the specified pointer\n  private focusPointer(pointerType: PointerType): void {\n    // If not supplied, use min pointer as default\n    if (pointerType !== PointerType.Min && pointerType !== PointerType.Max) {\n      pointerType = PointerType.Min;\n    }\n\n    if (pointerType === PointerType.Min) {\n      this.minHandleElement.focus();\n    } else if (this.range && pointerType === PointerType.Max) {\n      this.maxHandleElement.focus();\n    }\n  }\n\n  private refocusPointerIfNeeded(): void {\n    if (!ValueHelper.isNullOrUndefined(this.currentFocusPointer)) {\n      this.onPointerFocus(this.currentFocusPointer);\n      const element: SliderHandleDirective = this.getPointerElement(this.currentFocusPointer);\n      element.focus();\n    }\n  }\n\n  // Update each elements style based on options\n  private manageElementsStyle(): void {\n    this.updateScale();\n\n    this.floorLabelElement.setAlwaysHide(this.viewOptions.showTicksValues || this.viewOptions.hideLimitLabels);\n    this.ceilLabelElement.setAlwaysHide(this.viewOptions.showTicksValues || this.viewOptions.hideLimitLabels);\n\n    const hideLabelsForTicks: boolean = this.viewOptions.showTicksValues && !this.intermediateTicks;\n    this.minHandleLabelElement.setAlwaysHide(hideLabelsForTicks || this.viewOptions.hidePointerLabels);\n    this.maxHandleLabelElement.setAlwaysHide(hideLabelsForTicks || !this.range || this.viewOptions.hidePointerLabels);\n    this.combinedLabelElement.setAlwaysHide(hideLabelsForTicks || !this.range || this.viewOptions.hidePointerLabels);\n    this.selectionBarElement.setAlwaysHide(!this.range && !this.viewOptions.showSelectionBar);\n    this.leftOuterSelectionBarElement.setAlwaysHide(!this.range || !this.viewOptions.showOuterSelectionBars);\n    this.rightOuterSelectionBarElement.setAlwaysHide(!this.range || !this.viewOptions.showOuterSelectionBars);\n\n    this.fullBarTransparentClass = this.range && this.viewOptions.showOuterSelectionBars;\n    this.selectionBarDraggableClass = this.viewOptions.draggableRange && !this.viewOptions.onlyBindHandles;\n    this.ticksUnderValuesClass = this.intermediateTicks && this.options.showTicksValues;\n\n    if (this.sliderElementVerticalClass !== this.viewOptions.vertical) {\n      this.updateVerticalState();\n      // The above change in host component class will not be applied until the end of this cycle\n      // However, functions calculating the slider position expect the slider to be already styled as vertical\n      // So as a workaround, we need to reset the slider once again to compute the correct values\n      setTimeout((): void => { this.resetSlider(); });\n    }\n\n    // Changing animate class may interfere with slider reset/initialisation, so we should set it separately,\n    // after all is properly set up\n    if (this.sliderElementAnimateClass !== this.viewOptions.animate) {\n      setTimeout((): void => { this.sliderElementAnimateClass = this.viewOptions.animate; });\n    }\n  }\n\n  // Manage the events bindings based on readOnly and disabled options\n  private manageEventsBindings(): void {\n    if (this.viewOptions.disabled || this.viewOptions.readOnly) {\n      this.unbindEvents();\n    } else {\n      this.bindEvents();\n    }\n  }\n\n  // Set the disabled state based on disabled option\n  private updateDisabledState(): void {\n    this.sliderElementDisabledAttr = this.viewOptions.disabled ? 'disabled' : null;\n  }\n\n  // Set vertical state based on vertical option\n  private updateVerticalState(): void {\n    this.sliderElementVerticalClass = this.viewOptions.vertical;\n    for (const element of this.getAllSliderElements()) {\n      // This is also called before ngAfterInit, so need to check that view child bindings work\n      if (!ValueHelper.isNullOrUndefined(element)) {\n        element.setVertical(this.viewOptions.vertical);\n      }\n    }\n  }\n\n  private updateScale(): void {\n    for (const element of this.getAllSliderElements()) {\n      element.setScale(this.viewOptions.scale);\n    }\n  }\n\n  private getAllSliderElements(): SliderElementDirective[] {\n    return [this.leftOuterSelectionBarElement,\n      this.rightOuterSelectionBarElement,\n      this.fullBarElement,\n      this.selectionBarElement,\n      this.minHandleElement,\n      this.maxHandleElement,\n      this.floorLabelElement,\n      this.ceilLabelElement,\n      this.minHandleLabelElement,\n      this.maxHandleLabelElement,\n      this.combinedLabelElement,\n      this.ticksElement\n    ];\n  }\n\n  // Initialize slider handles positions and labels\n  // Run only once during initialization and every time view port changes size\n  private initHandles(): void {\n    this.updateLowHandle(this.valueToPosition(this.viewLowValue));\n\n    /*\n   the order here is important since the selection bar should be\n   updated after the high handle but before the combined label\n   */\n    if (this.range) {\n      this.updateHighHandle(this.valueToPosition(this.viewHighValue));\n    }\n\n    this.updateSelectionBar();\n\n    if (this.range) {\n      this.updateCombinedLabel();\n    }\n\n    this.updateTicksScale();\n  }\n\n  // Adds accessibility attributes, run only once during initialization\n  private addAccessibility(): void {\n    this.updateAriaAttributes();\n\n    this.minHandleElement.role = 'slider';\n\n    if ( this.viewOptions.keyboardSupport &&\n      !(this.viewOptions.readOnly || this.viewOptions.disabled) ) {\n      this.minHandleElement.tabindex = '0';\n    } else {\n      this.minHandleElement.tabindex = '';\n    }\n\n    if (this.viewOptions.vertical) {\n      this.minHandleElement.ariaOrientation = 'vertical';\n    }\n\n    if (!ValueHelper.isNullOrUndefined(this.viewOptions.ariaLabel)) {\n      this.minHandleElement.ariaLabel = this.viewOptions.ariaLabel;\n    } else if (!ValueHelper.isNullOrUndefined(this.viewOptions.ariaLabelledBy)) {\n      this.minHandleElement.ariaLabelledBy = this.viewOptions.ariaLabelledBy;\n    }\n\n    if (this.range) {\n      this.maxHandleElement.role = 'slider';\n\n      if (this.viewOptions.keyboardSupport &&\n        !(this.viewOptions.readOnly || this.viewOptions.disabled)) {\n        this.maxHandleElement.tabindex = '0';\n      } else {\n        this.maxHandleElement.tabindex = '';\n      }\n\n      this.maxHandleElement.ariaOrientation = this.viewOptions.vertical ? 'vertical' : 'horizontal';\n\n      if (!ValueHelper.isNullOrUndefined(this.viewOptions.ariaLabelHigh)) {\n        this.maxHandleElement.ariaLabel = this.viewOptions.ariaLabelHigh;\n      } else if (!ValueHelper.isNullOrUndefined(this.viewOptions.ariaLabelledByHigh)) {\n        this.maxHandleElement.ariaLabelledBy = this.viewOptions.ariaLabelledByHigh;\n      }\n    }\n  }\n\n  // Updates aria attributes according to current values\n  private updateAriaAttributes(): void {\n    this.minHandleElement.ariaValueNow = (+this.value).toString();\n    this.minHandleElement.ariaValueText = this.viewOptions.translate(+this.value, LabelType.Low);\n    this.minHandleElement.ariaValueMin = this.viewOptions.floor.toString();\n    this.minHandleElement.ariaValueMax = this.viewOptions.ceil.toString();\n\n    if (this.range) {\n      this.maxHandleElement.ariaValueNow = (+this.highValue).toString();\n      this.maxHandleElement.ariaValueText = this.viewOptions.translate(+this.highValue, LabelType.High);\n      this.maxHandleElement.ariaValueMin = this.viewOptions.floor.toString();\n      this.maxHandleElement.ariaValueMax = this.viewOptions.ceil.toString();\n    }\n  }\n\n  // Calculate dimensions that are dependent on view port size\n  // Run once during initialization and every time view port changes size.\n  private calculateViewDimensions(): void {\n    if (!ValueHelper.isNullOrUndefined(this.viewOptions.handleDimension)) {\n      this.minHandleElement.setDimension(this.viewOptions.handleDimension);\n    } else {\n      this.minHandleElement.calculateDimension();\n    }\n\n    const handleWidth: number = this.minHandleElement.dimension;\n\n    this.handleHalfDimension = handleWidth / 2;\n\n    if (!ValueHelper.isNullOrUndefined(this.viewOptions.barDimension)) {\n      this.fullBarElement.setDimension(this.viewOptions.barDimension);\n    } else {\n      this.fullBarElement.calculateDimension();\n    }\n\n    this.maxHandlePosition = this.fullBarElement.dimension - handleWidth;\n\n    if (this.initHasRun) {\n      this.updateFloorLabel();\n      this.updateCeilLabel();\n      this.initHandles();\n    }\n  }\n\n  private calculateViewDimensionsAndDetectChanges(): void {\n    this.calculateViewDimensions();\n    this.changeDetectionRef.detectChanges();\n  }\n\n  // Update the ticks position\n  private updateTicksScale(): void {\n    if (!this.viewOptions.showTicks) {\n      return;\n    }\n\n    const ticksArray: number[] = !ValueHelper.isNullOrUndefined(this.viewOptions.ticksArray)\n      ? this.viewOptions.ticksArray\n      : this.getTicksArray();\n    const translate: string = this.viewOptions.vertical ? 'translateY' : 'translateX';\n\n    if (this.viewOptions.rightToLeft) {\n      ticksArray.reverse();\n    }\n\n    const newTicks: Tick[] = ticksArray.map((value: number): Tick => {\n      let position: number = this.valueToPosition(value);\n\n      if (this.viewOptions.vertical) {\n        position = this.maxHandlePosition - position;\n      }\n\n      const translation: string = translate + '(' + Math.round(position) + 'px)';\n      const tick: Tick = new Tick();\n      tick.selected = this.isTickSelected(value);\n      tick.style = {\n        '-webkit-transform': translation,\n        '-moz-transform': translation,\n        '-o-transform': translation,\n        '-ms-transform': translation,\n        transform: translation,\n      };\n      if (tick.selected && !ValueHelper.isNullOrUndefined(this.viewOptions.getSelectionBarColor)) {\n        tick.style['background-color'] = this.getSelectionBarColor();\n      }\n      if (!tick.selected && !ValueHelper.isNullOrUndefined(this.viewOptions.getTickColor)) {\n        tick.style['background-color'] = this.getTickColor(value);\n      }\n      if (!ValueHelper.isNullOrUndefined(this.viewOptions.ticksTooltip)) {\n        tick.tooltip = this.viewOptions.ticksTooltip(value);\n        tick.tooltipPlacement = this.viewOptions.vertical ? 'right' : 'top';\n      }\n      if (this.viewOptions.showTicksValues && (value % this.viewOptions.tickValueStep === 0)) {\n        tick.value = this.getDisplayValue(value, LabelType.TickValue);\n        if (!ValueHelper.isNullOrUndefined(this.viewOptions.ticksValuesTooltip)) {\n          tick.valueTooltip = this.viewOptions.ticksValuesTooltip(value);\n          tick.valueTooltipPlacement = this.viewOptions.vertical\n            ? 'right'\n            : 'top';\n        }\n      }\n      if (!ValueHelper.isNullOrUndefined(this.viewOptions.getLegend)) {\n        const legend: string = this.viewOptions.getLegend(value);\n        if (!ValueHelper.isNullOrUndefined(legend)) {\n          tick.legend = legend;\n        }\n      }\n      return tick;\n    });\n\n    // We should avoid re-creating the ticks array if possible\n    // This both improves performance and makes CSS animations work correctly\n    if (!ValueHelper.isNullOrUndefined(this.ticks) && this.ticks.length === newTicks.length) {\n      for (let i = 0; i  < newTicks.length; ++i) {\n        Object.assign(this.ticks[i], newTicks[i]);\n      }\n    } else {\n      this.ticks = newTicks;\n    }\n\n    this.changeDetectionRef.detectChanges();\n  }\n\n  private getTicksArray(): number[] {\n    const step: number = (!ValueHelper.isNullOrUndefined(this.viewOptions.tickStep)) ? this.viewOptions.tickStep : this.viewOptions.step;\n    const ticksArray: number[] = [];\n    for (let value: number = this.viewOptions.floor; value <= this.viewOptions.ceil; value += step) {\n      ticksArray.push(value);\n    }\n    return ticksArray;\n  }\n\n  private isTickSelected(value: number): boolean {\n    if (!this.range) {\n      if (!ValueHelper.isNullOrUndefined(this.viewOptions.showSelectionBarFromValue)) {\n        const center: number = this.viewOptions.showSelectionBarFromValue;\n        if (this.viewLowValue > center &&\n            value >= center &&\n            value <= this.viewLowValue) {\n          return true;\n        } else if (this.viewLowValue < center &&\n                   value <= center &&\n                   value >= this.viewLowValue) {\n          return true;\n        }\n      } else if (this.viewOptions.showSelectionBarEnd) {\n        if (value >= this.viewLowValue) {\n          return true;\n        }\n      } else if (this.viewOptions.showSelectionBar && value <= this.viewLowValue) {\n        return true;\n      }\n    }\n\n    if (this.range && value >= this.viewLowValue && value <= this.viewHighValue) {\n      return true;\n    }\n\n    return false;\n  }\n\n  // Update position of the floor label\n  private updateFloorLabel(): void {\n    if (!this.floorLabelElement.alwaysHide) {\n      this.floorLabelElement.setValue(this.getDisplayValue(this.viewOptions.floor, LabelType.Floor));\n      this.floorLabelElement.calculateDimension();\n      const position: number = this.viewOptions.rightToLeft\n        ? this.fullBarElement.dimension - this.floorLabelElement.dimension\n        : 0;\n      this.floorLabelElement.setPosition(position);\n    }\n  }\n\n  // Update position of the ceiling label\n  private updateCeilLabel(): void {\n    if (!this.ceilLabelElement.alwaysHide) {\n      this.ceilLabelElement.setValue(this.getDisplayValue(this.viewOptions.ceil, LabelType.Ceil));\n      this.ceilLabelElement.calculateDimension();\n      const position: number = this.viewOptions.rightToLeft\n        ? 0\n        : this.fullBarElement.dimension - this.ceilLabelElement.dimension;\n      this.ceilLabelElement.setPosition(position);\n    }\n  }\n\n  // Update slider handles and label positions\n  private updateHandles(which: PointerType, newPos: number): void {\n    if (which === PointerType.Min) {\n      this.updateLowHandle(newPos);\n    } else if (which === PointerType.Max) {\n      this.updateHighHandle(newPos);\n    }\n\n    this.updateSelectionBar();\n    this.updateTicksScale();\n    if (this.range) {\n      this.updateCombinedLabel();\n    }\n  }\n\n  // Helper function to work out the position for handle labels depending on RTL or not\n  private getHandleLabelPos(labelType: PointerType, newPos: number): number {\n    const labelDimension: number = (labelType === PointerType.Min)\n      ? this.minHandleLabelElement.dimension\n      : this.maxHandleLabelElement.dimension;\n    const nearHandlePos: number = newPos - labelDimension / 2 + this.handleHalfDimension;\n    const endOfBarPos: number = this.fullBarElement.dimension - labelDimension;\n\n    if (!this.viewOptions.boundPointerLabels) {\n      return nearHandlePos;\n    }\n\n    if ((this.viewOptions.rightToLeft && labelType === PointerType.Min) ||\n       (!this.viewOptions.rightToLeft && labelType === PointerType.Max)) {\n      return Math.min(nearHandlePos, endOfBarPos);\n    } else {\n      return Math.min(Math.max(nearHandlePos, 0), endOfBarPos);\n    }\n  }\n\n  // Update low slider handle position and label\n  private updateLowHandle(newPos: number): void {\n    this.minHandleElement.setPosition(newPos);\n    this.minHandleLabelElement.setValue(this.getDisplayValue(this.viewLowValue, LabelType.Low));\n    this.minHandleLabelElement.setPosition(this.getHandleLabelPos(PointerType.Min, newPos));\n\n    if (!ValueHelper.isNullOrUndefined(this.viewOptions.getPointerColor)) {\n      this.minPointerStyle = {\n        backgroundColor: this.getPointerColor(PointerType.Min),\n      };\n    }\n\n    if (this.viewOptions.autoHideLimitLabels) {\n      this.updateFloorAndCeilLabelsVisibility();\n    }\n  }\n\n  // Update high slider handle position and label\n  private updateHighHandle(newPos: number): void {\n    this.maxHandleElement.setPosition(newPos);\n    this.maxHandleLabelElement.setValue(this.getDisplayValue(this.viewHighValue, LabelType.High));\n    this.maxHandleLabelElement.setPosition(this.getHandleLabelPos(PointerType.Max, newPos));\n\n    if (!ValueHelper.isNullOrUndefined(this.viewOptions.getPointerColor)) {\n      this.maxPointerStyle = {\n        backgroundColor: this.getPointerColor(PointerType.Max),\n      };\n    }\n    if (this.viewOptions.autoHideLimitLabels) {\n      this.updateFloorAndCeilLabelsVisibility();\n    }\n  }\n\n  // Show/hide floor/ceiling label\n  private updateFloorAndCeilLabelsVisibility(): void {\n    // Show based only on hideLimitLabels if pointer labels are hidden\n    if (this.viewOptions.hidePointerLabels) {\n      return;\n    }\n    let floorLabelHidden = false;\n    let ceilLabelHidden = false;\n    const isMinLabelAtFloor: boolean = this.isLabelBelowFloorLabel(this.minHandleLabelElement);\n    const isMinLabelAtCeil: boolean = this.isLabelAboveCeilLabel(this.minHandleLabelElement);\n    const isMaxLabelAtCeil: boolean = this.isLabelAboveCeilLabel(this.maxHandleLabelElement);\n    const isCombinedLabelAtFloor: boolean = this.isLabelBelowFloorLabel(this.combinedLabelElement);\n    const isCombinedLabelAtCeil: boolean = this.isLabelAboveCeilLabel(this.combinedLabelElement);\n\n    if (isMinLabelAtFloor) {\n      floorLabelHidden = true;\n      this.floorLabelElement.hide();\n    } else {\n      floorLabelHidden = false;\n      this.floorLabelElement.show();\n    }\n\n    if (isMinLabelAtCeil) {\n      ceilLabelHidden = true;\n      this.ceilLabelElement.hide();\n    } else {\n      ceilLabelHidden = false;\n      this.ceilLabelElement.show();\n    }\n\n    if (this.range) {\n      const hideCeil: boolean = this.combinedLabelElement.isVisible() ? isCombinedLabelAtCeil : isMaxLabelAtCeil;\n      const hideFloor: boolean = this.combinedLabelElement.isVisible() ? isCombinedLabelAtFloor : isMinLabelAtFloor;\n\n      if (hideCeil) {\n        this.ceilLabelElement.hide();\n      } else if (!ceilLabelHidden) {\n        this.ceilLabelElement.show();\n      }\n\n      // Hide or show floor label\n      if (hideFloor) {\n        this.floorLabelElement.hide();\n      } else if (!floorLabelHidden) {\n        this.floorLabelElement.show();\n      }\n    }\n  }\n\n  private isLabelBelowFloorLabel(label: SliderLabelDirective): boolean {\n    const pos: number = label.position;\n    const dim: number = label.dimension;\n    const floorPos: number = this.floorLabelElement.position;\n    const floorDim: number = this.floorLabelElement.dimension;\n    return this.viewOptions.rightToLeft\n      ? pos + dim >= floorPos - 2\n      : pos <= floorPos + floorDim + 2;\n  }\n\n  private isLabelAboveCeilLabel(label: SliderLabelDirective): boolean {\n    const pos: number = label.position;\n    const dim: number = label.dimension;\n    const ceilPos: number = this.ceilLabelElement.position;\n    const ceilDim: number = this.ceilLabelElement.dimension;\n    return this.viewOptions.rightToLeft\n      ? pos <= ceilPos + ceilDim + 2\n      : pos + dim >= ceilPos - 2;\n  }\n\n  // Update slider selection bar, combined label and range label\n  private updateSelectionBar(): void {\n    let position = 0;\n    let dimension = 0;\n    const isSelectionBarFromRight: boolean = this.viewOptions.rightToLeft\n        ? !this.viewOptions.showSelectionBarEnd\n        : this.viewOptions.showSelectionBarEnd;\n    const positionForRange: number = this.viewOptions.rightToLeft\n        ? this.maxHandleElement.position + this.handleHalfDimension\n        : this.minHandleElement.position + this.handleHalfDimension;\n\n    if (this.range) {\n      dimension = Math.abs(this.maxHandleElement.position - this.minHandleElement.position);\n      position = positionForRange;\n    } else {\n      if (!ValueHelper.isNullOrUndefined(this.viewOptions.showSelectionBarFromValue)) {\n        const center: number = this.viewOptions.showSelectionBarFromValue;\n        const centerPosition: number = this.valueToPosition(center);\n        const isModelGreaterThanCenter: boolean = this.viewOptions.rightToLeft\n            ? this.viewLowValue <= center\n            : this.viewLowValue > center;\n        if (isModelGreaterThanCenter) {\n          dimension = this.minHandleElement.position - centerPosition;\n          position = centerPosition + this.handleHalfDimension;\n        } else {\n          dimension = centerPosition - this.minHandleElement.position;\n          position = this.minHandleElement.position + this.handleHalfDimension;\n        }\n      } else if (isSelectionBarFromRight) {\n        dimension = Math.ceil(Math.abs(this.maxHandlePosition - this.minHandleElement.position) + this.handleHalfDimension);\n        position = Math.floor(this.minHandleElement.position + this.handleHalfDimension);\n      } else {\n        dimension = this.minHandleElement.position + this.handleHalfDimension;\n        position = 0;\n      }\n    }\n    this.selectionBarElement.setDimension(dimension);\n    this.selectionBarElement.setPosition(position);\n    if (this.range && this.viewOptions.showOuterSelectionBars) {\n      if (this.viewOptions.rightToLeft) {\n        this.rightOuterSelectionBarElement.setDimension(position);\n        this.rightOuterSelectionBarElement.setPosition(0);\n        this.fullBarElement.calculateDimension();\n        this.leftOuterSelectionBarElement.setDimension(this.fullBarElement.dimension - (position + dimension));\n        this.leftOuterSelectionBarElement.setPosition(position + dimension);\n      } else {\n        this.leftOuterSelectionBarElement.setDimension(position);\n        this.leftOuterSelectionBarElement.setPosition(0);\n        this.fullBarElement.calculateDimension();\n        this.rightOuterSelectionBarElement.setDimension(this.fullBarElement.dimension - (position + dimension));\n        this.rightOuterSelectionBarElement.setPosition(position + dimension);\n      }\n    }\n    if (!ValueHelper.isNullOrUndefined(this.viewOptions.getSelectionBarColor)) {\n      const color: string = this.getSelectionBarColor();\n      this.barStyle = {\n        backgroundColor: color,\n      };\n    } else if (!ValueHelper.isNullOrUndefined(this.viewOptions.selectionBarGradient)) {\n      const offset: number = (!ValueHelper.isNullOrUndefined(this.viewOptions.showSelectionBarFromValue))\n            ? this.valueToPosition(this.viewOptions.showSelectionBarFromValue)\n            : 0;\n      const reversed: boolean = (offset - position > 0 && !isSelectionBarFromRight) || (offset - position <= 0 && isSelectionBarFromRight);\n      const direction: string = this.viewOptions.vertical\n          ? reversed ? 'bottom' : 'top'\n          : reversed ? 'left' : 'right';\n      this.barStyle = {\n        backgroundImage:\n          'linear-gradient(to ' +\n          direction +\n          ', ' +\n          this.viewOptions.selectionBarGradient.from +\n          ' 0%,' +\n          this.viewOptions.selectionBarGradient.to +\n          ' 100%)',\n      };\n      if (this.viewOptions.vertical) {\n        this.barStyle.backgroundPosition =\n          'center ' +\n          (offset +\n            dimension +\n            position +\n            (reversed ? -this.handleHalfDimension : 0)) +\n          'px';\n        this.barStyle.backgroundSize =\n          '100% ' + (this.fullBarElement.dimension - this.handleHalfDimension) + 'px';\n      } else {\n        this.barStyle.backgroundPosition =\n          offset -\n          position +\n          (reversed ? this.handleHalfDimension : 0) +\n          'px center';\n        this.barStyle.backgroundSize =\n          this.fullBarElement.dimension - this.handleHalfDimension + 'px 100%';\n      }\n    }\n  }\n\n  // Wrapper around the getSelectionBarColor of the user to pass to correct parameters\n  private getSelectionBarColor(): string {\n    if (this.range) {\n      return this.viewOptions.getSelectionBarColor(\n        this.value,\n        this.highValue\n      );\n    }\n    return this.viewOptions.getSelectionBarColor(this.value);\n  }\n\n  // Wrapper around the getPointerColor of the user to pass to  correct parameters\n  private getPointerColor(pointerType: PointerType): string {\n    if (pointerType === PointerType.Max) {\n      return this.viewOptions.getPointerColor(\n        this.highValue,\n        pointerType\n      );\n    }\n    return this.viewOptions.getPointerColor(\n      this.value,\n      pointerType\n    );\n  }\n\n  // Wrapper around the getTickColor of the user to pass to correct parameters\n  private getTickColor(value: number): string {\n    return this.viewOptions.getTickColor(value);\n  }\n\n  // Update combined label position and value\n  private updateCombinedLabel(): void {\n    let isLabelOverlap: boolean = null;\n    if (this.viewOptions.rightToLeft) {\n      isLabelOverlap =\n        this.minHandleLabelElement.position - this.minHandleLabelElement.dimension - 10 <= this.maxHandleLabelElement.position;\n    } else {\n      isLabelOverlap =\n        this.minHandleLabelElement.position + this.minHandleLabelElement.dimension + 10 >= this.maxHandleLabelElement.position;\n    }\n\n    if (isLabelOverlap) {\n      const lowDisplayValue: string = this.getDisplayValue(this.viewLowValue, LabelType.Low);\n      const highDisplayValue: string = this.getDisplayValue(this.viewHighValue, LabelType.High);\n      const combinedLabelValue: string = this.viewOptions.rightToLeft\n        ? this.viewOptions.combineLabels(highDisplayValue, lowDisplayValue)\n        : this.viewOptions.combineLabels(lowDisplayValue, highDisplayValue);\n\n      this.combinedLabelElement.setValue(combinedLabelValue);\n      const pos: number = this.viewOptions.boundPointerLabels\n        ? Math.min(\n            Math.max(\n              this.selectionBarElement.position +\n                this.selectionBarElement.dimension / 2 -\n                this.combinedLabelElement.dimension / 2,\n              0\n            ),\n            this.fullBarElement.dimension - this.combinedLabelElement.dimension\n          )\n        : this.selectionBarElement.position + this.selectionBarElement.dimension / 2 - this.combinedLabelElement.dimension / 2;\n\n      this.combinedLabelElement.setPosition(pos);\n      this.minHandleLabelElement.hide();\n      this.maxHandleLabelElement.hide();\n      this.combinedLabelElement.show();\n    } else {\n      this.updateHighHandle(this.valueToPosition(this.viewHighValue));\n      this.updateLowHandle(this.valueToPosition(this.viewLowValue));\n      this.maxHandleLabelElement.show();\n      this.minHandleLabelElement.show();\n      this.combinedLabelElement.hide();\n    }\n    if (this.viewOptions.autoHideLimitLabels) {\n      this.updateFloorAndCeilLabelsVisibility();\n    }\n  }\n\n  // Return the translated value if a translate function is provided else the original value\n  private getDisplayValue(value: number, which: LabelType): string {\n    if (!ValueHelper.isNullOrUndefined(this.viewOptions.stepsArray) && !this.viewOptions.bindIndexForStepsArray) {\n      value = this.getStepValue(value);\n    }\n    return this.viewOptions.translate(value, which);\n  }\n\n  // Round value to step and precision based on minValue\n  private roundStep(value: number, customStep?: number): number {\n    const step: number = !ValueHelper.isNullOrUndefined(customStep) ? customStep : this.viewOptions.step;\n    let steppedDifference: number = MathHelper.roundToPrecisionLimit(\n      (value - this.viewOptions.floor) / step, this.viewOptions.precisionLimit);\n    steppedDifference = Math.round(steppedDifference) * step;\n    return MathHelper.roundToPrecisionLimit(this.viewOptions.floor + steppedDifference, this.viewOptions.precisionLimit);\n  }\n\n  // Translate value to pixel position\n  private valueToPosition(val: number): number {\n    let fn: ValueToPositionFunction  = ValueHelper.linearValueToPosition;\n    if (!ValueHelper.isNullOrUndefined(this.viewOptions.customValueToPosition)) {\n      fn = this.viewOptions.customValueToPosition;\n    } else if (this.viewOptions.logScale) {\n      fn = ValueHelper.logValueToPosition;\n    }\n\n    val = MathHelper.clampToRange(val, this.viewOptions.floor, this.viewOptions.ceil);\n    let percent: number = fn(val, this.viewOptions.floor, this.viewOptions.ceil);\n    if (ValueHelper.isNullOrUndefined(percent)) {\n      percent = 0;\n    }\n    if (this.viewOptions.rightToLeft) {\n      percent = 1 - percent;\n    }\n    return percent * this.maxHandlePosition;\n  }\n\n  // Translate position to model value\n  private positionToValue(position: number): number {\n    let percent: number = position / this.maxHandlePosition;\n    if (this.viewOptions.rightToLeft) {\n      percent = 1 - percent;\n    }\n    let fn: PositionToValueFunction = ValueHelper.linearPositionToValue;\n    if (!ValueHelper.isNullOrUndefined(this.viewOptions.customPositionToValue)) {\n      fn = this.viewOptions.customPositionToValue;\n    } else if (this.viewOptions.logScale) {\n      fn = ValueHelper.logPositionToValue;\n    }\n    const value: number = fn(percent, this.viewOptions.floor, this.viewOptions.ceil);\n    return !ValueHelper.isNullOrUndefined(value) ? value : 0;\n  }\n\n  // Get the X-coordinate or Y-coordinate of an event\n  private getEventXY(event: MouseEvent|TouchEvent, targetTouchId?: number): number {\n    if (event instanceof MouseEvent) {\n      return this.viewOptions.vertical ? event.clientY : event.clientX;\n    }\n\n    let touchIndex = 0;\n    const touches: TouchList = event.touches;\n    if (!ValueHelper.isNullOrUndefined(targetTouchId)) {\n      for (let i = 0; i < touches.length; i++) {\n        if (touches[i].identifier === targetTouchId) {\n          touchIndex = i;\n          break;\n        }\n      }\n    }\n\n    // Return the target touch or if the target touch was not found in the event\n    // returns the coordinates of the first touch\n    return this.viewOptions.vertical ? touches[touchIndex].clientY : touches[touchIndex].clientX;\n  }\n\n  // Compute the event position depending on whether the slider is horizontal or vertical\n  private getEventPosition(event: MouseEvent|TouchEvent, targetTouchId?: number): number {\n    const sliderElementBoundingRect: ClientRect = this.elementRef.nativeElement.getBoundingClientRect();\n\n    const sliderPos: number = this.viewOptions.vertical ?\n      sliderElementBoundingRect.bottom : sliderElementBoundingRect.left;\n    let eventPos = 0;\n    if (this.viewOptions.vertical) {\n      eventPos = -this.getEventXY(event, targetTouchId) + sliderPos;\n    } else {\n      eventPos = this.getEventXY(event, targetTouchId) - sliderPos;\n    }\n    return eventPos * this.viewOptions.scale - this.handleHalfDimension;\n  }\n\n  // Get the handle closest to an event\n  private getNearestHandle(event: MouseEvent|TouchEvent): PointerType {\n    if (!this.range) {\n      return PointerType.Min;\n    }\n\n    const position: number = this.getEventPosition(event);\n    const distanceMin: number = Math.abs(position - this.minHandleElement.position);\n    const distanceMax: number = Math.abs(position - this.maxHandleElement.position);\n\n    if (distanceMin < distanceMax) {\n      return PointerType.Min;\n    } else if (distanceMin > distanceMax) {\n      return PointerType.Max;\n    } else if (!this.viewOptions.rightToLeft) {\n      // if event is at the same distance from min/max then if it's at left of minH, we return minH else maxH\n      return position < this.minHandleElement.position ? PointerType.Min : PointerType.Max;\n    }\n    // reverse in rtl\n    return position > this.minHandleElement.position ? PointerType.Min : PointerType.Max;\n  }\n\n  // Bind mouse and touch events to slider handles\n  private bindEvents(): void {\n    const draggableRange: boolean = this.viewOptions.draggableRange;\n\n    if (!this.viewOptions.onlyBindHandles) {\n      this.selectionBarElement.on('mousedown',\n        (event: MouseEvent): void => this.onBarStart(null, draggableRange, event, true, true, true)\n      );\n    }\n\n    if (this.viewOptions.draggableRangeOnly) {\n      this.minHandleElement.on('mousedown',\n        (event: MouseEvent): void => this.onBarStart(PointerType.Min, draggableRange, event, true, true)\n      );\n      this.maxHandleElement.on('mousedown',\n        (event: MouseEvent): void => this.onBarStart(PointerType.Max, draggableRange, event, true, true)\n      );\n    } else {\n      this.minHandleElement.on('mousedown',\n        (event: MouseEvent): void => this.onStart(PointerType.Min, event, true, true)\n      );\n\n      if (this.range) {\n        this.maxHandleElement.on('mousedown',\n          (event: MouseEvent): void => this.onStart(PointerType.Max, event, true, true)\n        );\n      }\n      if (!this.viewOptions.onlyBindHandles) {\n        this.fullBarElement.on('mousedown',\n          (event: MouseEvent): void => this.onStart(null, event, true, true, true)\n        );\n        this.ticksElement.on('mousedown',\n          (event: MouseEvent): void => this.onStart(null, event, true, true, true, true)\n        );\n      }\n    }\n\n    if (!this.viewOptions.onlyBindHandles) {\n      this.selectionBarElement.onPassive('touchstart',\n        (event: TouchEvent): void => this.onBarStart(null, draggableRange, event, true, true, true)\n      );\n    }\n    if (this.viewOptions.draggableRangeOnly) {\n      this.minHandleElement.onPassive('touchstart',\n        (event: TouchEvent): void => this.onBarStart(PointerType.Min, draggableRange, event, true, true)\n      );\n      this.maxHandleElement.onPassive('touchstart',\n        (event: TouchEvent): void => this.onBarStart(PointerType.Max, draggableRange, event, true, true)\n      );\n    } else {\n      this.minHandleElement.onPassive('touchstart',\n        (event: TouchEvent): void => this.onStart(PointerType.Min, event, true, true)\n      );\n      if (this.range) {\n        this.maxHandleElement.onPassive('touchstart',\n          (event: TouchEvent): void => this.onStart(PointerType.Max, event, true, true)\n        );\n      }\n      if (!this.viewOptions.onlyBindHandles) {\n        this.fullBarElement.onPassive('touchstart',\n          (event: TouchEvent): void => this.onStart(null, event, true, true, true)\n        );\n        this.ticksElement.onPassive('touchstart',\n          (event: TouchEvent): void => this.onStart(null, event, false, false, true, true)\n        );\n      }\n    }\n\n    if (this.viewOptions.keyboardSupport) {\n      this.minHandleElement.on('focus', (): void => this.onPointerFocus(PointerType.Min));\n      if (this.range) {\n        this.maxHandleElement.on('focus', (): void => this.onPointerFocus(PointerType.Max));\n      }\n    }\n  }\n\n  // Unbind mouse and touch events to slider handles\n  private unbindEvents(): void {\n    this.unsubscribeOnMove();\n    this.unsubscribeOnEnd();\n\n    for (const element of this.getAllSliderElements()) {\n      element.off();\n    }\n  }\n\n  private onBarStart(pointerType: PointerType, draggableRange: boolean, event: MouseEvent|TouchEvent,\n                     bindMove: boolean, bindEnd: boolean, simulateImmediateMove?: boolean, simulateImmediateEnd?: boolean): void {\n    if (draggableRange) {\n      this.onDragStart(pointerType, event, bindMove, bindEnd);\n    } else {\n      this.onStart(pointerType, event, bindMove, bindEnd, simulateImmediateMove, simulateImmediateEnd);\n    }\n  }\n\n  // onStart event handler\n  private onStart(pointerType: PointerType, event: MouseEvent|TouchEvent,\n                  bindMove: boolean, bindEnd: boolean, simulateImmediateMove?: boolean, simulateImmediateEnd?: boolean): void {\n    event.stopPropagation();\n    // Only call preventDefault() when handling non-passive events (passive events don't need it)\n    if (!CompatibilityHelper.isTouchEvent(event) || !detectPassiveEvents.hasSupport) {\n      event.preventDefault();\n    }\n\n    // We have to do this in case the HTML where the sliders are on\n    // have been animated into view.\n    this.calculateViewDimensions();\n\n    if (ValueHelper.isNullOrUndefined(pointerType)) {\n      pointerType = this.getNearestHandle(event);\n    }\n\n    this.currentTrackingPointer = pointerType;\n\n    const pointerElement: SliderHandleDirective = this.getPointerElement(pointerType);\n    pointerElement.active = true;\n\n    if (this.viewOptions.keyboardSupport) {\n      pointerElement.focus();\n    }\n\n    if (bindMove) {\n      this.unsubscribeOnMove();\n\n      const onMoveCallback: ((e: MouseEvent|TouchEvent) => void) =\n        (e: MouseEvent|TouchEvent): void => this.dragging.active ? this.onDragMove(e) : this.onMove(e);\n\n      if (CompatibilityHelper.isTouchEvent(event)) {\n        this.onMoveEventListener = this.eventListenerHelper.attachPassiveEventListener(\n          document, 'touchmove', onMoveCallback, this.viewOptions.touchEventsInterval);\n      } else {\n        this.onMoveEventListener = this.eventListenerHelper.attachEventListener(\n          document, 'mousemove', onMoveCallback, this.viewOptions.mouseEventsInterval);\n      }\n    }\n\n    if (bindEnd) {\n      this.unsubscribeOnEnd();\n\n      const onEndCallback: ((e: MouseEvent|TouchEvent) => void) =\n        (e: MouseEvent|TouchEvent): void => this.onEnd(e);\n\n      if (CompatibilityHelper.isTouchEvent(event)) {\n        this.onEndEventListener = this.eventListenerHelper.attachPassiveEventListener(document, 'touchend', onEndCallback);\n      } else {\n        this.onEndEventListener = this.eventListenerHelper.attachEventListener(document, 'mouseup', onEndCallback);\n      }\n    }\n\n    this.userChangeStart.emit(this.getChangeContext());\n\n    if (CompatibilityHelper.isTouchEvent(event) && !ValueHelper.isNullOrUndefined((event as TouchEvent).changedTouches)) {\n      // Store the touch identifier\n      if (ValueHelper.isNullOrUndefined(this.touchId)) {\n        this.touchId = (event as TouchEvent).changedTouches[0].identifier;\n      }\n    }\n\n    // Click events, either with mouse or touch gesture are weird. Sometimes they result in full\n    // start, move, end sequence, and sometimes, they don't - they only invoke mousedown\n    // As a workaround, we simulate the first move event and the end event if it's necessary\n    if (simulateImmediateMove) {\n      this.onMove(event, true);\n    }\n\n    if (simulateImmediateEnd) {\n      this.onEnd(event);\n    }\n  }\n\n  // onMove event handler\n  private onMove(event: MouseEvent|TouchEvent, fromTick?: boolean): void {\n    let touchForThisSlider: Touch = null;\n\n    if (CompatibilityHelper.isTouchEvent(event)) {\n      const changedTouches: TouchList = (event as TouchEvent).changedTouches;\n      // tslint:disable-next-line: prefer-for-of\n      for (let i = 0; i < changedTouches.length; i++) {\n        if (changedTouches[i].identifier === this.touchId) {\n          touchForThisSlider = changedTouches[i];\n          break;\n        }\n      }\n\n      if (ValueHelper.isNullOrUndefined(touchForThisSlider)) {\n        return;\n      }\n    }\n\n    const newPos: number = !ValueHelper.isNullOrUndefined(touchForThisSlider)\n      ? this.getEventPosition(event, touchForThisSlider.identifier)\n      : this.getEventPosition(event);\n    let newValue: number;\n    const ceilValue: number = this.viewOptions.rightToLeft\n        ? this.viewOptions.floor\n        : this.viewOptions.ceil;\n    const floorValue: number = this.viewOptions.rightToLeft ? this.viewOptions.ceil : this.viewOptions.floor;\n\n    if (newPos <= 0) {\n      newValue = floorValue;\n    } else if (newPos >= this.maxHandlePosition) {\n      newValue = ceilValue;\n    } else {\n      newValue = this.positionToValue(newPos);\n      if (fromTick && !ValueHelper.isNullOrUndefined(this.viewOptions.tickStep)) {\n        newValue = this.roundStep(newValue, this.viewOptions.tickStep);\n      } else {\n        newValue = this.roundStep(newValue);\n      }\n    }\n    this.positionTrackingHandle(newValue);\n  }\n\n  private onEnd(event: MouseEvent|TouchEvent): void {\n    if (CompatibilityHelper.isTouchEvent(event)) {\n      const changedTouches: TouchList = (event as TouchEvent).changedTouches;\n      if (changedTouches[0].identifier !== this.touchId) {\n        return;\n      }\n    }\n\n    this.touchId = null;\n\n    if (!this.viewOptions.keyboardSupport) {\n      this.minHandleElement.active = false;\n      this.maxHandleElement.active = false;\n      this.currentTrackingPointer = null;\n    }\n    this.dragging.active = false;\n\n    this.unsubscribeOnMove();\n    this.unsubscribeOnEnd();\n\n    this.userChangeEnd.emit(this.getChangeContext());\n  }\n\n  private onPointerFocus(pointerType: PointerType): void {\n    const pointerElement: SliderHandleDirective = this.getPointerElement(pointerType);\n    pointerElement.on('blur', (): void => this.onPointerBlur(pointerElement));\n    pointerElement.on('keydown', (event: KeyboardEvent): void => this.onKeyboardEvent(event));\n    pointerElement.on('keyup', (): void => this.onKeyUp());\n    pointerElement.active = true;\n\n    this.currentTrackingPointer = pointerType;\n    this.currentFocusPointer = pointerType;\n    this.firstKeyDown = true;\n  }\n\n  private onKeyUp(): void {\n    this.firstKeyDown = true;\n    this.userChangeEnd.emit(this.getChangeContext());\n  }\n\n  private onPointerBlur(pointer: SliderHandleDirective): void {\n    pointer.off('blur');\n    pointer.off('keydown');\n    pointer.off('keyup');\n    pointer.active = false;\n    if (ValueHelper.isNullOrUndefined(this.touchId)) {\n      this.currentTrackingPointer = null;\n      this.currentFocusPointer = null;\n    }\n  }\n\n  private getKeyActions(currentValue: number): {[key: string]: number} {\n    const valueRange: number = this.viewOptions.ceil - this.viewOptions.floor;\n\n    let increaseStep: number = currentValue + this.viewOptions.step;\n    let decreaseStep: number = currentValue - this.viewOptions.step;\n    let increasePage: number = currentValue + valueRange / 10;\n    let decreasePage: number = currentValue - valueRange / 10;\n\n    if (this.viewOptions.reversedControls) {\n      increaseStep = currentValue - this.viewOptions.step;\n      decreaseStep = currentValue + this.viewOptions.step;\n      increasePage = currentValue - valueRange / 10;\n      decreasePage = currentValue + valueRange / 10;\n    }\n\n    // Left to right default actions\n    const actions: {[key: string]: number} = {\n      UP: increaseStep,\n      DOWN: decreaseStep,\n      LEFT: decreaseStep,\n      RIGHT: increaseStep,\n      PAGEUP: increasePage,\n      PAGEDOWN: decreasePage,\n      HOME: this.viewOptions.reversedControls ? this.viewOptions.ceil : this.viewOptions.floor,\n      END: this.viewOptions.reversedControls ? this.viewOptions.floor : this.viewOptions.ceil,\n    };\n    // right to left means swapping right and left arrows\n    if (this.viewOptions.rightToLeft) {\n      actions.LEFT = increaseStep;\n      actions.RIGHT = decreaseStep;\n      // right to left and vertical means we also swap up and down\n      if (this.viewOptions.vertical) {\n        actions.UP = decreaseStep;\n        actions.DOWN = increaseStep;\n      }\n    }\n    return actions;\n  }\n\n  private onKeyboardEvent(event: KeyboardEvent): void {\n    const currentValue: number = this.getCurrentTrackingValue();\n    const keyCode: number = !ValueHelper.isNullOrUndefined(event.keyCode)\n      ? event.keyCode\n      : event.which;\n    const keys: {[keyCode: number]: string} = {\n        38: 'UP',\n        40: 'DOWN',\n        37: 'LEFT',\n        39: 'RIGHT',\n        33: 'PAGEUP',\n        34: 'PAGEDOWN',\n        36: 'HOME',\n        35: 'END',\n      };\n    const actions: {[key: string]: number} = this.getKeyActions(currentValue);\n    const key: string = keys[keyCode];\n    const action: number = actions[key];\n\n    if (ValueHelper.isNullOrUndefined(action) || ValueHelper.isNullOrUndefined(this.currentTrackingPointer)) {\n      return;\n    }\n    event.preventDefault();\n\n    if (this.firstKeyDown) {\n      this.firstKeyDown = false;\n      this.userChangeStart.emit(this.getChangeContext());\n    }\n\n    const actionValue: number = MathHelper.clampToRange(action, this.viewOptions.floor, this.viewOptions.ceil);\n    const newValue: number = this.roundStep(actionValue);\n    if (!this.viewOptions.draggableRangeOnly) {\n      this.positionTrackingHandle(newValue);\n    } else {\n      const difference: number = this.viewHighValue - this.viewLowValue;\n      let newMinValue: number;\n      let newMaxValue: number;\n\n      if (this.currentTrackingPointer === PointerType.Min) {\n        newMinValue = newValue;\n        newMaxValue = newValue + difference;\n        if (newMaxValue > this.viewOptions.ceil) {\n          newMaxValue = this.viewOptions.ceil;\n          newMinValue = newMaxValue - difference;\n        }\n      } else if (this.currentTrackingPointer === PointerType.Max) {\n        newMaxValue = newValue;\n        newMinValue = newValue - difference;\n        if (newMinValue < this.viewOptions.floor) {\n          newMinValue = this.viewOptions.floor;\n          newMaxValue = newMinValue + difference;\n        }\n      }\n      this.positionTrackingBar(newMinValue, newMaxValue);\n    }\n  }\n\n  // onDragStart event handler, handles dragging of the middle bar\n  private onDragStart(pointerType: PointerType, event: MouseEvent|TouchEvent,\n                      bindMove: boolean, bindEnd: boolean): void {\n    const position: number = this.getEventPosition(event);\n\n    this.dragging = new Dragging();\n    this.dragging.active = true;\n    this.dragging.value = this.positionToValue(position);\n    this.dragging.difference = this.viewHighValue - this.viewLowValue;\n    this.dragging.lowLimit = this.viewOptions.rightToLeft\n        ? this.minHandleElement.position - position\n        : position - this.minHandleElement.position;\n    this.dragging.highLimit = this.viewOptions.rightToLeft\n        ? position - this.maxHandleElement.position\n        : this.maxHandleElement.position - position;\n\n    this.onStart(pointerType, event, bindMove, bindEnd);\n  }\n\n  /** Get min value depending on whether the newPos is outOfBounds above or below the bar and rightToLeft */\n  private getMinValue(newPos: number, outOfBounds: boolean, isAbove: boolean): number {\n    const isRTL: boolean = this.viewOptions.rightToLeft;\n    let value: number = null;\n\n    if (outOfBounds) {\n      if (isAbove) {\n        value = isRTL\n          ? this.viewOptions.floor\n          : this.viewOptions.ceil - this.dragging.difference;\n      } else {\n        value = isRTL\n          ? this.viewOptions.ceil - this.dragging.difference\n          : this.viewOptions.floor;\n      }\n    } else {\n      value = isRTL\n        ? this.positionToValue(newPos + this.dragging.lowLimit)\n        : this.positionToValue(newPos - this.dragging.lowLimit);\n    }\n    return this.roundStep(value);\n  }\n\n  /** Get max value depending on whether the newPos is outOfBounds above or below the bar and rightToLeft */\n  private getMaxValue(newPos: number, outOfBounds: boolean, isAbove: boolean): number {\n    const isRTL: boolean = this.viewOptions.rightToLeft;\n    let value: number = null;\n\n    if (outOfBounds) {\n      if (isAbove) {\n        value = isRTL\n          ? this.viewOptions.floor + this.dragging.difference\n          : this.viewOptions.ceil;\n      } else {\n        value = isRTL\n          ? this.viewOptions.ceil\n          : this.viewOptions.floor + this.dragging.difference;\n      }\n    } else {\n      if (isRTL) {\n        value =\n          this.positionToValue(newPos + this.dragging.lowLimit) +\n          this.dragging.difference;\n      } else {\n        value =\n          this.positionToValue(newPos - this.dragging.lowLimit) +\n          this.dragging.difference;\n      }\n    }\n\n    return this.roundStep(value);\n  }\n\n  private onDragMove(event?: MouseEvent|TouchEvent): void {\n    const newPos: number = this.getEventPosition(event);\n\n    let ceilLimit: number;\n    let floorLimit: number;\n    let floorHandleElement: SliderHandleDirective;\n    let ceilHandleElement: SliderHandleDirective;\n    if (this.viewOptions.rightToLeft) {\n      ceilLimit = this.dragging.lowLimit;\n      floorLimit = this.dragging.highLimit;\n      floorHandleElement = this.maxHandleElement;\n      ceilHandleElement = this.minHandleElement;\n    } else {\n      ceilLimit = this.dragging.highLimit;\n      floorLimit = this.dragging.lowLimit;\n      floorHandleElement = this.minHandleElement;\n      ceilHandleElement = this.maxHandleElement;\n    }\n\n    const isUnderFloorLimit: boolean = (newPos <= floorLimit);\n    const isOverCeilLimit: boolean = (newPos >= this.maxHandlePosition - ceilLimit);\n\n    let newMinValue: number;\n    let newMaxValue: number;\n    if (isUnderFloorLimit) {\n      if (floorHandleElement.position === 0) {\n        return;\n      }\n      newMinValue = this.getMinValue(newPos, true, false);\n      newMaxValue = this.getMaxValue(newPos, true, false);\n    } else if (isOverCeilLimit) {\n      if (ceilHandleElement.position === this.maxHandlePosition) {\n        return;\n      }\n      newMaxValue = this.getMaxValue(newPos, true, true);\n      newMinValue = this.getMinValue(newPos, true, true);\n    } else {\n      newMinValue = this.getMinValue(newPos, false, false);\n      newMaxValue = this.getMaxValue(newPos, false, false);\n    }\n\n    this.positionTrackingBar(newMinValue, newMaxValue);\n  }\n\n  // Set the new value and position for the entire bar\n  private positionTrackingBar(newMinValue: number, newMaxValue: number): void {\n    if (!ValueHelper.isNullOrUndefined(this.viewOptions.minLimit) &&\n        newMinValue < this.viewOptions.minLimit) {\n      newMinValue = this.viewOptions.minLimit;\n      newMaxValue = MathHelper.roundToPrecisionLimit(newMinValue + this.dragging.difference, this.viewOptions.precisionLimit);\n    }\n    if (!ValueHelper.isNullOrUndefined(this.viewOptions.maxLimit) &&\n        newMaxValue > this.viewOptions.maxLimit) {\n      newMaxValue = this.viewOptions.maxLimit;\n      newMinValue = MathHelper.roundToPrecisionLimit(newMaxValue - this.dragging.difference, this.viewOptions.precisionLimit);\n    }\n\n    this.viewLowValue = newMinValue;\n    this.viewHighValue = newMaxValue;\n    this.applyViewChange();\n    this.updateHandles(PointerType.Min, this.valueToPosition(newMinValue));\n    this.updateHandles(PointerType.Max, this.valueToPosition(newMaxValue));\n  }\n\n  // Set the new value and position to the current tracking handle\n  private positionTrackingHandle(newValue: number): void {\n    newValue = this.applyMinMaxLimit(newValue);\n    if (this.range) {\n      if (this.viewOptions.pushRange) {\n        newValue = this.applyPushRange(newValue);\n      } else {\n        if (this.viewOptions.noSwitching) {\n          if (this.currentTrackingPointer === PointerType.Min &&\n              newValue > this.viewHighValue) {\n            newValue = this.applyMinMaxRange(this.viewHighValue);\n          } else if (this.currentTrackingPointer === PointerType.Max &&\n                     newValue < this.viewLowValue) {\n            newValue = this.applyMinMaxRange(this.viewLowValue);\n          }\n        }\n        newValue = this.applyMinMaxRange(newValue);\n        /* This is to check if we need to switch the min and max handles */\n        if (this.currentTrackingPointer === PointerType.Min && newValue > this.viewHighValue) {\n          this.viewLowValue = this.viewHighValue;\n          this.applyViewChange();\n          this.updateHandles(PointerType.Min, this.maxHandleElement.position);\n          this.updateAriaAttributes();\n          this.currentTrackingPointer = PointerType.Max;\n          this.minHandleElement.active = false;\n          this.maxHandleElement.active = true;\n          if (this.viewOptions.keyboardSupport) {\n            this.maxHandleElement.focus();\n          }\n        } else if (this.currentTrackingPointer === PointerType.Max &&\n                   newValue < this.viewLowValue) {\n          this.viewHighValue = this.viewLowValue;\n          this.applyViewChange();\n          this.updateHandles(PointerType.Max, this.minHandleElement.position);\n          this.updateAriaAttributes();\n          this.currentTrackingPointer = PointerType.Min;\n          this.maxHandleElement.active = false;\n          this.minHandleElement.active = true;\n          if (this.viewOptions.keyboardSupport) {\n            this.minHandleElement.focus();\n          }\n        }\n      }\n    }\n\n    if (this.getCurrentTrackingValue() !== newValue) {\n      if (this.currentTrackingPointer === PointerType.Min) {\n        this.viewLowValue = newValue;\n        this.applyViewChange();\n      } else if (this.currentTrackingPointer === PointerType.Max) {\n        this.viewHighValue = newValue;\n        this.applyViewChange();\n      }\n      this.updateHandles(this.currentTrackingPointer, this.valueToPosition(newValue));\n      this.updateAriaAttributes();\n    }\n  }\n\n  private applyMinMaxLimit(newValue: number): number {\n    if (!ValueHelper.isNullOrUndefined(this.viewOptions.minLimit) && newValue < this.viewOptions.minLimit) {\n      return this.viewOptions.minLimit;\n    }\n    if (!ValueHelper.isNullOrUndefined(this.viewOptions.maxLimit) && newValue > this.viewOptions.maxLimit) {\n      return this.viewOptions.maxLimit;\n    }\n    return newValue;\n  }\n\n  private applyMinMaxRange(newValue: number): number {\n    const oppositeValue: number = (this.currentTrackingPointer === PointerType.Min)\n      ? this.viewHighValue\n      : this.viewLowValue;\n    const difference: number = Math.abs(newValue - oppositeValue);\n    if (!ValueHelper.isNullOrUndefined(this.viewOptions.minRange)) {\n      if (difference < this.viewOptions.minRange) {\n        if (this.currentTrackingPointer === PointerType.Min) {\n          return MathHelper.roundToPrecisionLimit(this.viewHighValue - this.viewOptions.minRange, this.viewOptions.precisionLimit);\n        } else if (this.currentTrackingPointer === PointerType.Max) {\n          return MathHelper.roundToPrecisionLimit(this.viewLowValue + this.viewOptions.minRange, this.viewOptions.precisionLimit);\n        }\n      }\n    }\n    if (!ValueHelper.isNullOrUndefined(this.viewOptions.maxRange)) {\n      if (difference > this.viewOptions.maxRange) {\n        if (this.currentTrackingPointer === PointerType.Min) {\n          return MathHelper.roundToPrecisionLimit(this.viewHighValue - this.viewOptions.maxRange, this.viewOptions.precisionLimit);\n        } else if (this.currentTrackingPointer === PointerType.Max) {\n          return MathHelper.roundToPrecisionLimit(this.viewLowValue + this.viewOptions.maxRange, this.viewOptions.precisionLimit);\n        }\n      }\n    }\n    return newValue;\n  }\n\n  private applyPushRange(newValue: number): number {\n    const difference: number = (this.currentTrackingPointer === PointerType.Min)\n          ? this.viewHighValue - newValue\n          : newValue - this.viewLowValue;\n    const minRange: number = (!ValueHelper.isNullOrUndefined(this.viewOptions.minRange))\n          ? this.viewOptions.minRange\n          : this.viewOptions.step;\n    const maxRange: number = this.viewOptions.maxRange;\n    // if smaller than minRange\n    if (difference < minRange) {\n      if (this.currentTrackingPointer === PointerType.Min) {\n        this.viewHighValue = MathHelper.roundToPrecisionLimit(\n          Math.min(newValue + minRange, this.viewOptions.ceil), this.viewOptions.precisionLimit);\n        newValue = MathHelper.roundToPrecisionLimit(this.viewHighValue - minRange, this.viewOptions.precisionLimit);\n        this.applyViewChange();\n        this.updateHandles(PointerType.Max, this.valueToPosition(this.viewHighValue));\n      } else if (this.currentTrackingPointer === PointerType.Max) {\n        this.viewLowValue = MathHelper.roundToPrecisionLimit(\n          Math.max(newValue - minRange, this.viewOptions.floor), this.viewOptions.precisionLimit);\n        newValue = MathHelper.roundToPrecisionLimit(this.viewLowValue + minRange, this.viewOptions.precisionLimit);\n        this.applyViewChange();\n        this.updateHandles(PointerType.Min, this.valueToPosition(this.viewLowValue));\n      }\n      this.updateAriaAttributes();\n    } else if (!ValueHelper.isNullOrUndefined(maxRange) && difference > maxRange) {\n      // if greater than maxRange\n      if (this.currentTrackingPointer === PointerType.Min) {\n        this.viewHighValue = MathHelper.roundToPrecisionLimit(newValue + maxRange, this.viewOptions.precisionLimit);\n        this.applyViewChange();\n        this.updateHandles(PointerType.Max, this.valueToPosition(this.viewHighValue)\n        );\n      } else if (this.currentTrackingPointer === PointerType.Max) {\n        this.viewLowValue = MathHelper.roundToPrecisionLimit(newValue - maxRange, this.viewOptions.precisionLimit);\n        this.applyViewChange();\n        this.updateHandles(PointerType.Min, this.valueToPosition(this.viewLowValue));\n      }\n      this.updateAriaAttributes();\n    }\n    return newValue;\n  }\n\n  private getChangeContext(): ChangeContext {\n    const changeContext: ChangeContext = new ChangeContext();\n    changeContext.pointerType = this.currentTrackingPointer;\n    changeContext.value = +this.value;\n    if (this.range) {\n      changeContext.highValue = +this.highValue;\n    }\n    return changeContext;\n  }\n}\n","import { Component, Input, TemplateRef } from '@angular/core';\n\n@Component({\n  selector: 'ngx-slider-tooltip-wrapper',\n  templateUrl: './tooltip-wrapper.component.html',\n  styleUrls: ['./tooltip-wrapper.component.scss']\n})\nexport class TooltipWrapperComponent {\n  @Input()\n  template: TemplateRef<any>;\n\n  @Input()\n  tooltip: string;\n\n  @Input()\n  placement: string;\n\n  @Input()\n  content: string;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SliderComponent } from './slider.component';\nimport { SliderElementDirective } from '../directives/slider-element.directive';\nimport { SliderHandleDirective } from '../directives/slider-handle.directive';\nimport { SliderLabelDirective } from '../directives/slider-label.directive';\nimport { TooltipWrapperComponent } from '../tooltip-wrapper/tooltip-wrapper.component';\n\n/**\n * NgxSlider module\n *\n * The module exports the slider component\n */\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    SliderComponent,\n    SliderElementDirective,\n    SliderHandleDirective,\n    SliderLabelDirective,\n    TooltipWrapperComponent\n  ],\n  exports: [\n    SliderComponent\n  ]\n})\nexport class NgxSliderModule { }\n"]}